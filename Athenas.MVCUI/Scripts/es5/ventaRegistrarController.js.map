{"version":3,"sources":["../es6/venta/ventaRegistrarController.js"],"names":["VentaController","service","ui","clienteService","productoService","lstProductos","lstClientes","tipoBusqueda","lstDetalles","prodSeleccionado","cliSeleccionado","descuento","muestraProductos","listar","data","titulo","cabecera","filas","map","prod","Descripcion","Precio","AthenasNet","formatPrecio","PrecioVenta","Stock","StockActual","Descuento","Categoria","Id","setModalBuscarData","console","log","muestraClientes","listarCliente","cli","Nombre","Apellido","Dni","Telefono","evtBtnBuscarProducto","getBtnBuscarProducto","addEventListener","evtBtnBuscarCliente","getBtnBuscarCliente","evtAbreModal","getModalBuscar","on","e","evtBtnSelModalBuscar","getModalContentBuscar","target","dataset","seleccionId","id","parseInt","find","setProducto","Codigo","formatCodigo","validaProdSeleccionado","modal","setCliente","validaCliSeleccionado","evtBtnAgregarDet","getBtnAgregarDet","cantidad","getInputCantidad","value","validaCantidadDetalle","encontrado","i","length","Producto","Cantidad","push","DesctUni","muestraDetalle","validaDetalle","evtEliminaDetalle","getTblDetalle","productoId","filter","det","subtotal","total","SubTotal","setDetalleData","setSubTotal","toFixed","setDescuento","setTotal","evtFormVenta","formVenta","getFormVenta","preventDefault","venta","Cliente","Detalles","pedido","crear","mensaje","color","texto","localStorage","setItem","JSON","stringify","window","location","href","MVC_URL_BASE","error","iniciar"],"mappings":";;;;;;;;;;;;AAAC,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAUC,EAAV,EAAcC,cAAd,EAA8BC,eAA9B,EAAkD;AACvE,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,YAAY,GAAG,IAAnB,CAHuE,CAG/C;;AACxB,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAIC,SAAS,GAAG,CAAhB;;AAEA,MAAMC,gBAAgB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAR,eAAe,CAACS,MAAhB,CAAuB,EAAvB,CADA;;AAAA;AACrBR,cAAAA,YADqB;AAEfS,cAAAA,IAFe,GAER;AACTC,gBAAAA,MAAM,EAAE,iBADC;AAETC,gBAAAA,QAAQ,EAAE,CACN,aADM,EAEN,QAFM,EAGN,OAHM,EAIN,WAJM,EAKN,WALM,EAMN,UANM,CAFD;AAUTC,gBAAAA,KAAK,EAAEZ,YAAY,CAACa,GAAb,CAAiB,UAAAC,IAAI,EAAI;AAE5B,yBAAO;AACHL,oBAAAA,IAAI,EAAE;AACFM,sBAAAA,WAAW,EAAED,IAAI,CAACC,WADhB;AAEFC,sBAAAA,MAAM,EAAEC,UAAU,CAACC,YAAX,CAAwBJ,IAAI,CAACK,WAA7B,CAFN;AAGFC,sBAAAA,KAAK,EAAEN,IAAI,CAACO,WAHV;AAIFC,sBAAAA,SAAS,EAAEL,UAAU,CAACC,YAAX,CAAwBJ,IAAI,CAACQ,SAA7B,CAJT;AAKFC,sBAAAA,SAAS,EAAET,IAAI,CAACS,SAAL,CAAeR;AALxB,qBADH;AAQHS,oBAAAA,EAAE,EAAEV,IAAI,CAACU;AARN,mBAAP;AAWH,iBAbM;AAVE,eAFQ;AA4BrB3B,cAAAA,EAAE,CAAC4B,kBAAH,CAAsBhB,IAAtB;AACAiB,cAAAA,OAAO,CAACC,GAAR,CAAY3B,YAAZ;;AA7BqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBO,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAgCA,MAAMqB,eAAe;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA9B,cAAc,CAAC+B,aAAf,CAA6B,EAA7B,CADA;;AAAA;AACpB5B,cAAAA,WADoB;AAEdQ,cAAAA,IAFc,GAEP;AACTC,gBAAAA,MAAM,EAAE,gBADC;AAETC,gBAAAA,QAAQ,EAAE,CACN,iBADM,EAEN,KAFM,EAGN,UAHM,EAIN,UAJM,CAFD;AAQTC,gBAAAA,KAAK,EAAEX,WAAW,CAACY,GAAZ,CAAgB,UAAAiB,GAAG,EAAI;AAE1B,yBAAO;AACHrB,oBAAAA,IAAI,EAAE;AACFsB,sBAAAA,MAAM,EAAED,GAAG,CAACC,MAAJ,GAAa,GAAb,GAAmBD,GAAG,CAACE,QAD7B;AAEFC,sBAAAA,GAAG,EAAEH,GAAG,CAACG,GAFP;AAGFC,sBAAAA,QAAQ,EAAEJ,GAAG,CAACI;AAHZ,qBADH;AAMHV,oBAAAA,EAAE,EAAEM,GAAG,CAACN;AANL,mBAAP;AASH,iBAXM;AARE,eAFO;AAuBpB3B,cAAAA,EAAE,CAAC4B,kBAAH,CAAsBhB,IAAtB;AACAiB,cAAAA,OAAO,CAACC,GAAR,CAAY1B,WAAZ;;AAxBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAf2B,eAAe;AAAA;AAAA;AAAA,KAArB;;AA2BA,MAAMO,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,WAAMtC,EAAE,CAACuC,oBAAH,GAA0BC,gBAA1B,CAA2C,OAA3C,EAAoD;AAAA,aAAMnC,YAAY,GAAG,UAArB;AAAA,KAApD,CAAN;AAAA,GAA7B;;AAEA,MAAMoC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WAAMzC,EAAE,CAAC0C,mBAAH,GAAyBF,gBAAzB,CAA0C,OAA1C,EAAmD;AAAA,aAAMnC,YAAY,GAAG,SAArB;AAAA,KAAnD,CAAN;AAAA,GAA5B;;AAEA,MAAMsC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB3C,IAAAA,EAAE,CAAC4C,cAAH,GAAoBC,EAApB,CAAuB,eAAvB,EAAwC,UAACC,CAAD,EAAO;AAC3C,UAAIzC,YAAY,KAAK,UAArB,EAAiCK,gBAAgB,GAAjD,KACKqB,eAAe;AACvB,KAHD;AAIH,GALD;;AAOA,MAAMgB,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAE/B/C,IAAAA,EAAE,CAACgD,qBAAH,GAA2BR,gBAA3B,CAA4C,OAA5C,EAAqD,UAACM,CAAD,EAAO;AAExD,UAAIA,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBC,WAArB,EAAkC;AAE9BtB,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,YAAMsB,EAAE,GAAGC,QAAQ,CAACP,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBC,WAAlB,CAAnB;;AAEA,YAAI9C,YAAY,KAAK,UAArB,EAAiC;AAE7BE,UAAAA,gBAAgB,GAAGJ,YAAY,CAACmD,IAAb,CAAkB,UAAArC,IAAI;AAAA,mBAAIA,IAAI,CAACU,EAAL,KAAYyB,EAAhB;AAAA,WAAtB,CAAnB;AAEApD,UAAAA,EAAE,CAACuD,WAAH,iCACOhD,gBADP;AAEIe,YAAAA,WAAW,EAAEF,UAAU,CAACC,YAAX,CAAwBd,gBAAgB,CAACe,WAAzC,CAFjB;AAGIG,YAAAA,SAAS,EAAEL,UAAU,CAACC,YAAX,CAAwBd,gBAAgB,CAACkB,SAAzC,CAHf;AAII+B,YAAAA,MAAM,EAAEpC,UAAU,CAACqC,YAAX,CAAwBlD,gBAAgB,CAACoB,EAAzC,EAA6C,KAA7C,EAAoD,CAApD;AAJZ;AAMA3B,UAAAA,EAAE,CAAC0D,sBAAH,CAA0B,IAA1B;AACA1D,UAAAA,EAAE,CAAC4C,cAAH,GAAoBe,KAApB,CAA0B,MAA1B;AACH,SAZD,MAaK;AACDnD,UAAAA,eAAe,GAAGJ,WAAW,CAACkD,IAAZ,CAAiB,UAAArB,GAAG;AAAA,mBAAIA,GAAG,CAACN,EAAJ,KAAWyB,EAAf;AAAA,WAApB,CAAlB;AAEApD,UAAAA,EAAE,CAAC4D,UAAH,CAAcpD,eAAd;AACAR,UAAAA,EAAE,CAAC6D,qBAAH,CAAyB,IAAzB;AACA7D,UAAAA,EAAE,CAAC4C,cAAH,GAAoBe,KAApB,CAA0B,MAA1B;AACH;AAEJ;AAEJ,KA/BD;AAiCH,GAnCD;;AAqCA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAE3B9D,IAAAA,EAAE,CAAC+D,gBAAH,GAAsBvB,gBAAtB,CAAuC,OAAvC,EAAgD,YAAM;AAElD,UAAMwB,QAAQ,GAAGhE,EAAE,CAACiE,gBAAH,GAAsBC,KAAvC;AACArC,MAAAA,OAAO,CAACC,GAAR,CAAYkC,QAAZ;;AAEA,UAAI,CAACA,QAAD,IAAaX,QAAQ,CAACW,QAAD,CAAR,IAAsB,CAAvC,EAA0C;AACtChE,QAAAA,EAAE,CAACmE,qBAAH,CAAyB,KAAzB;AACH,OAFD,MAGK;AACDnE,QAAAA,EAAE,CAACmE,qBAAH,CAAyB,IAAzB;AACH;;AAED,UAAI,CAAC5D,gBAAgB,CAACoB,EAAtB,EAA0B;AACtB3B,QAAAA,EAAE,CAAC0D,sBAAH,CAA0B,KAA1B;AACH;;AAED,UAAInD,gBAAgB,CAACoB,EAAjB,IAAwBqC,QAAQ,IAAIX,QAAQ,CAACW,QAAD,CAAR,GAAqB,CAA7D,EAAiE;AAE7D,YAAII,UAAU,GAAG,KAAjB;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/D,WAAW,CAACgE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAEzC,cAAI9D,gBAAgB,CAACoB,EAAjB,KAAwBrB,WAAW,CAAC+D,CAAD,CAAX,CAAeE,QAAf,CAAwB5C,EAApD,EAAwD;AAEpDrB,YAAAA,WAAW,CAAC+D,CAAD,CAAX,CAAeG,QAAf,GAA0BnB,QAAQ,CAACW,QAAD,CAAlC;AAEAI,YAAAA,UAAU,GAAG,IAAb;AACA;AACH;AAER;;AAED,YAAI,CAACA,UAAL,EAAiB;AACb9D,UAAAA,WAAW,CAACmE,IAAZ,CAAiB;AAEbF,YAAAA,QAAQ,EAAE;AACN5C,cAAAA,EAAE,EAAEpB,gBAAgB,CAACoB,EADf;AAENT,cAAAA,WAAW,EAAEX,gBAAgB,CAACW;AAFxB,aAFG;AAMbsD,YAAAA,QAAQ,EAAEnB,QAAQ,CAACW,QAAD,CANL;AAOb7C,YAAAA,MAAM,EAAEZ,gBAAgB,CAACe,WAPZ;AAQboD,YAAAA,QAAQ,EAAEnE,gBAAgB,CAACkB;AARd,WAAjB;AAWH;;AAEDkD,QAAAA,cAAc;AACd3E,QAAAA,EAAE,CAAC4E,aAAH,CAAiB,IAAjB;AACA5E,QAAAA,EAAE,CAACuD,WAAH,CAAe;AACXC,UAAAA,MAAM,EAAE,EADG;AAEXtC,UAAAA,WAAW,EAAE,EAFF;AAGXI,UAAAA,WAAW,EAAE,EAHF;AAIXE,UAAAA,WAAW,EAAE,EAJF;AAKXC,UAAAA,SAAS,EAAE;AALA,SAAf;AAQAlB,QAAAA,gBAAgB,GAAG,EAAnB;AACAP,QAAAA,EAAE,CAACiE,gBAAH,GAAsBC,KAAtB,GAA8B,EAA9B;AAEC;AACJ,KA5DD;AA8DH,GAhED;;AAkEA,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAE5B7E,IAAAA,EAAE,CAAC8E,aAAH,GAAmBtC,gBAAnB,CAAoC,OAApC,EAA6C,UAACM,CAAD,EAAO;AAEhD,UAAIA,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiB6B,UAArB,EAAiC;AAC7B,YAAM3B,EAAE,GAAGC,QAAQ,CAACP,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiB6B,UAAlB,CAAnB;AAEAzE,QAAAA,WAAW,GAAGA,WAAW,CAAC0E,MAAZ,CAAmB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACV,QAAJ,CAAa5C,EAAb,KAAoByB,EAAxB;AAAA,SAAtB,CAAd;AACAuB,QAAAA,cAAc;AAGjB;AAEJ,KAXD;AAaH,GAfD;;AAkBA,MAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,QAAIO,QAAQ,GAAG,CAAf;AAEA,QAAIC,KAAK,GAAG,CAAZ;AAGA,QAAMvE,IAAI,GAAG;AAETG,MAAAA,KAAK,EAAET,WAAW,CAACU,GAAZ,CAAgB,UAAAiE,GAAG,EAAI;AAE1BC,QAAAA,QAAQ,IAAI7B,QAAQ,CAAC4B,GAAG,CAACT,QAAL,CAAR,GAAyBS,GAAG,CAAC9D,MAAzC;AACAV,QAAAA,SAAS,IAAI4C,QAAQ,CAAC4B,GAAG,CAACT,QAAL,CAAR,GAAyBS,GAAG,CAACP,QAA1C;AACAS,QAAAA,KAAK,IAAI9B,QAAQ,CAAC4B,GAAG,CAACT,QAAL,CAAR,GAAyBS,GAAG,CAAC9D,MAA7B,GAAsCkC,QAAQ,CAAC4B,GAAG,CAACT,QAAL,CAAR,GAAyBS,GAAG,CAACP,QAA5E;AAGA,eAAO;AACH9D,UAAAA,IAAI,EAAE;AACF4C,YAAAA,MAAM,EAAEpC,UAAU,CAACqC,YAAX,CAAwBwB,GAAG,CAACV,QAAJ,CAAa5C,EAArC,EAAyC,KAAzC,EAAgD,CAAhD,CADN;AAEFT,YAAAA,WAAW,EAAE+D,GAAG,CAACV,QAAJ,CAAarD,WAFxB;AAGFC,YAAAA,MAAM,EAAEC,UAAU,CAACC,YAAX,CAAwB4D,GAAG,CAAC9D,MAA5B,CAHN;AAIFqD,YAAAA,QAAQ,EAAES,GAAG,CAACT,QAJZ;AAKFY,YAAAA,QAAQ,EAAEhE,UAAU,CAACC,YAAX,CAAwB4D,GAAG,CAAC9D,MAAJ,GAAa8D,GAAG,CAACT,QAAzC,CALR;AAMF/C,YAAAA,SAAS,EAAEL,UAAU,CAACC,YAAX,CAAwB4D,GAAG,CAACP,QAAJ,GAAeO,GAAG,CAACT,QAA3C;AANT,WADH;AASHO,UAAAA,UAAU,EAAEE,GAAG,CAACV,QAAJ,CAAa5C;AATtB,SAAP;AAYH,OAnBM;AAFE,KAAb;AAwBA3B,IAAAA,EAAE,CAACqF,cAAH,CAAkBzE,IAAlB;AACAZ,IAAAA,EAAE,CAACsF,WAAH,CAAeJ,QAAQ,CAACK,OAAT,CAAiB,CAAjB,CAAf;AACAvF,IAAAA,EAAE,CAACwF,YAAH,CAAgB/E,SAAS,CAAC8E,OAAV,CAAkB,CAAlB,CAAhB;AACAvF,IAAAA,EAAE,CAACyF,QAAH,CAAYN,KAAK,CAACI,OAAN,CAAc,CAAd,CAAZ;AACH,GAlCD;;AAqCA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,QAAMC,SAAS,GAAG3F,EAAE,CAAC4F,YAAH,EAAlB;AACAD,IAAAA,SAAS,CAACnD,gBAAV,CAA2B,QAA3B;AAAA,0EAAqC,kBAAOM,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjCA,gBAAAA,CAAC,CAAC+C,cAAF;AAEMC,gBAAAA,KAJ2B,GAInB;AACVC,kBAAAA,OAAO,EAAE;AACLpE,oBAAAA,EAAE,EAAEnB,eAAe,CAACmB;AADf,mBADC;AAIVqE,kBAAAA,QAAQ,EAAE1F,WAJA;AAKVmB,kBAAAA,SAAS,EAAEhB;AALD,iBAJmB;;AAWjC,oBAAI,CAACqF,KAAK,CAACC,OAAN,CAAcpE,EAAnB,EAAuB;AACnB3B,kBAAAA,EAAE,CAAC6D,qBAAH,CAAyB,KAAzB;AACH;;AAED,oBAAIvD,WAAW,CAACgE,MAAZ,IAAsB,CAA1B,EAA6B;AACzBtE,kBAAAA,EAAE,CAAC4E,aAAH,CAAiB,KAAjB;AACH;;AAjBgC,sBAkB7BqB,MAAM,CAACF,OAAP,CAAepE,EAAf,IAAqBrB,WAAW,CAACgE,MAAZ,GAAqB,CAlBb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAqBnBvE,OAAO,CAACmG,KAAR,CAAcJ,KAAd,CArBmB;;AAAA;AAsBnBK,gBAAAA,OAtBmB,GAsBT;AACZC,kBAAAA,KAAK,EAAE,YADK;AAEZvF,kBAAAA,MAAM,EAAE,kBAFI;AAGZwF,kBAAAA,KAAK,EAAE;AAHK,iBAtBS;AA2BzBC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAhC;AACAO,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBxF,UAAU,CAACyF,YAAX,GAA0B,OAAjD;AA5ByB;AAAA;;AAAA;AAAA;AAAA;AA+BzBhF,gBAAAA,OAAO,CAACiF,KAAR;;AA/ByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArC;;AAAA;AAAA;AAAA;AAAA;AAqCH,GAxCD;;AA0CA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBzE,IAAAA,oBAAoB;AACpBG,IAAAA,mBAAmB;AACnBE,IAAAA,YAAY;AACZI,IAAAA,oBAAoB;AACpBe,IAAAA,gBAAgB;AAChBe,IAAAA,iBAAiB;AACjBa,IAAAA,YAAY;AACf,GARD;;AAUA,SAAO;AACHqB,IAAAA,OAAO,EAAPA;AADG,GAAP;AAGH,CApSA","sourcesContent":["ï»¿const VentaController = (service, ui, clienteService, productoService) => {\r\n    let lstProductos = [];\r\n    let lstClientes = [];\r\n    let tipoBusqueda = null;//Producto, Cliente\r\n    let lstDetalles = [];\r\n    let prodSeleccionado = {};\r\n    let cliSeleccionado = {};\r\n    let descuento = 0;\r\n\r\n    const muestraProductos = async () => {\r\n        lstProductos = await productoService.listar({});\r\n        const data = {\r\n            titulo: 'Buscar Producto',\r\n            cabecera: [\r\n                'DescripciÃ³n',\r\n                'Precio',\r\n                'Stock',\r\n                'Descuento',\r\n                'CategorÃ­a',\r\n                'Acciones'\r\n            ],\r\n            filas: lstProductos.map(prod => {\r\n\r\n                return {\r\n                    data: {\r\n                        Descripcion: prod.Descripcion,\r\n                        Precio: AthenasNet.formatPrecio(prod.PrecioVenta),\r\n                        Stock: prod.StockActual,\r\n                        Descuento: AthenasNet.formatPrecio(prod.Descuento),\r\n                        Categoria: prod.Categoria.Descripcion\r\n                    },\r\n                    Id: prod.Id\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        ui.setModalBuscarData(data);\r\n        console.log(lstProductos)\r\n    }\r\n\r\n    const muestraClientes = async () => {\r\n        lstClientes = await clienteService.listarCliente({});\r\n        const data = {\r\n            titulo: 'Buscar Cliente',\r\n            cabecera: [\r\n                'Nombre Completo',\r\n                'Dni',\r\n                'TelÃ©fono',\r\n                'Acciones'\r\n            ],\r\n            filas: lstClientes.map(cli => {\r\n\r\n                return {\r\n                    data: {\r\n                        Nombre: cli.Nombre + ' ' + cli.Apellido ,\r\n                        Dni: cli.Dni,\r\n                        Telefono: cli.Telefono\r\n                    },\r\n                    Id: cli.Id\r\n                }\r\n\r\n            })\r\n        }\r\n        ui.setModalBuscarData(data);\r\n        console.log(lstClientes)\r\n    }\r\n\r\n    const evtBtnBuscarProducto = () => ui.getBtnBuscarProducto().addEventListener('click', () => tipoBusqueda = 'Producto');\r\n\r\n    const evtBtnBuscarCliente = () => ui.getBtnBuscarCliente().addEventListener('click', () => tipoBusqueda = 'Cliente');\r\n\r\n    const evtAbreModal = () => {\r\n        ui.getModalBuscar().on('show.bs.modal', (e) => {\r\n            if (tipoBusqueda === 'Producto') muestraProductos();\r\n            else muestraClientes();\r\n        })\r\n    }\r\n\r\n    const evtBtnSelModalBuscar = () => {\r\n\r\n        ui.getModalContentBuscar().addEventListener('click', (e) => {\r\n\r\n            if (e.target.dataset.seleccionId) {\r\n\r\n                console.log('click de seleccion');\r\n\r\n                const id = parseInt(e.target.dataset.seleccionId);\r\n\r\n                if (tipoBusqueda === 'Producto') {\r\n\r\n                    prodSeleccionado = lstProductos.find(prod => prod.Id === id);\r\n\r\n                    ui.setProducto({\r\n                        ...prodSeleccionado,\r\n                        PrecioVenta: AthenasNet.formatPrecio(prodSeleccionado.PrecioVenta),\r\n                        Descuento: AthenasNet.formatPrecio(prodSeleccionado.Descuento),\r\n                        Codigo: AthenasNet.formatCodigo(prodSeleccionado.Id, 'PRD', 4)\r\n                    });\r\n                    ui.validaProdSeleccionado(true);\r\n                    ui.getModalBuscar().modal('hide');\r\n                }\r\n                else {\r\n                    cliSeleccionado = lstClientes.find(cli => cli.Id === id);\r\n\r\n                    ui.setCliente(cliSeleccionado);\r\n                    ui.validaCliSeleccionado(true);\r\n                    ui.getModalBuscar().modal('hide');\r\n                }\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const evtBtnAgregarDet = () => {\r\n\r\n        ui.getBtnAgregarDet().addEventListener('click', () => {\r\n\r\n            const cantidad = ui.getInputCantidad().value;\r\n            console.log(cantidad);\r\n\r\n            if (!cantidad || parseInt(cantidad) <= 0) {\r\n                ui.validaCantidadDetalle(false);\r\n            }\r\n            else {\r\n                ui.validaCantidadDetalle(true);\r\n            }\r\n\r\n            if (!prodSeleccionado.Id) {\r\n                ui.validaProdSeleccionado(false);\r\n            }\r\n\r\n            if (prodSeleccionado.Id && (cantidad && parseInt(cantidad) > 0)) {\r\n\r\n                let encontrado = false;\r\n\r\n                for (let i = 0; i < lstDetalles.length; i++) {\r\n\r\n                    if (prodSeleccionado.Id === lstDetalles[i].Producto.Id) {\r\n\r\n                        lstDetalles[i].Cantidad = parseInt(cantidad);\r\n\r\n                        encontrado = true;\r\n                        break;\r\n                    }\r\n                    \r\n            }\r\n\r\n            if (!encontrado) {\r\n                lstDetalles.push({\r\n\r\n                    Producto: {\r\n                        Id: prodSeleccionado.Id,\r\n                        Descripcion: prodSeleccionado.Descripcion\r\n                    },\r\n                    Cantidad: parseInt(cantidad),\r\n                    Precio: prodSeleccionado.PrecioVenta,\r\n                    DesctUni: prodSeleccionado.Descuento\r\n\r\n                });\r\n            }\r\n            \r\n            muestraDetalle();\r\n            ui.validaDetalle(true);\r\n            ui.setProducto({\r\n                Codigo: '',\r\n                Descripcion: '',\r\n                PrecioVenta: '',\r\n                StockActual: '',\r\n                Descuento: ''\r\n            })\r\n\r\n            prodSeleccionado = {};\r\n            ui.getInputCantidad().value = '';\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const evtEliminaDetalle = () => {\r\n\r\n        ui.getTblDetalle().addEventListener('click', (e) => {\r\n\r\n            if (e.target.dataset.productoId) {\r\n                const id = parseInt(e.target.dataset.productoId);\r\n\r\n                lstDetalles = lstDetalles.filter(det => det.Producto.Id !== id);\r\n                muestraDetalle();\r\n\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    const muestraDetalle = () => {\r\n        let subtotal = 0;\r\n        \r\n        let total = 0;\r\n        \r\n\r\n        const data = {\r\n\r\n            filas: lstDetalles.map(det => {\r\n\r\n                subtotal += parseInt(det.Cantidad) * det.Precio;\r\n                descuento += parseInt(det.Cantidad) * det.DesctUni;\r\n                total += parseInt(det.Cantidad) * det.Precio - parseInt(det.Cantidad) * det.DesctUni;\r\n\r\n\r\n                return {\r\n                    data: {\r\n                        Codigo: AthenasNet.formatCodigo(det.Producto.Id, 'PRD', 4),\r\n                        Descripcion: det.Producto.Descripcion,\r\n                        Precio: AthenasNet.formatPrecio(det.Precio),\r\n                        Cantidad: det.Cantidad,\r\n                        SubTotal: AthenasNet.formatPrecio(det.Precio * det.Cantidad),\r\n                        Descuento: AthenasNet.formatPrecio(det.DesctUni * det.Cantidad)\r\n                    },\r\n                    productoId: det.Producto.Id\r\n                }\r\n                \r\n            })\r\n        }\r\n\r\n        ui.setDetalleData(data);\r\n        ui.setSubTotal(subtotal.toFixed(2));\r\n        ui.setDescuento(descuento.toFixed(2));\r\n        ui.setTotal(total.toFixed(2));\r\n    }\r\n\r\n    \r\n    const evtFormVenta = () => {\r\n\r\n        const formVenta = ui.getFormVenta();\r\n        formVenta.addEventListener('submit', async (e) => {\r\n\r\n            e.preventDefault();\r\n\r\n            const venta = {\r\n                Cliente: {\r\n                    Id: cliSeleccionado.Id\r\n                },\r\n                Detalles: lstDetalles,\r\n                Descuento: descuento\r\n            }\r\n            if (!venta.Cliente.Id) {\r\n                ui.validaCliSeleccionado(false);\r\n            }\r\n\r\n            if (lstDetalles.length <= 0) {\r\n                ui.validaDetalle(false);\r\n            }\r\n            if (pedido.Cliente.Id && lstDetalles.length > 0) {\r\n            \r\n                try {\r\n                    await service.crear(venta)\r\n                    const mensaje = {\r\n                        color: 'bg-success',\r\n                        titulo: 'Registro exitoso',\r\n                        texto: 'La venta fue registrada exitosamente'\r\n                    }\r\n                    localStorage.setItem('mensaje', JSON.stringify(mensaje));\r\n                    window.location.href = AthenasNet.MVC_URL_BASE + 'Venta';\r\n                }   \r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const iniciar = () => {\r\n        evtBtnBuscarProducto();\r\n        evtBtnBuscarCliente();\r\n        evtAbreModal();\r\n        evtBtnSelModalBuscar();\r\n        evtBtnAgregarDet();\r\n        evtEliminaDetalle();\r\n        evtFormVenta();\r\n    }\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}"],"file":"ventaRegistrarController.js"}