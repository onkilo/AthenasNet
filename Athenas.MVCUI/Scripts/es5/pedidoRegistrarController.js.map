{"version":3,"sources":["../es6/pedido/pedidoRegistrarController.js"],"names":["PedidoController","service","ui","proveedorService","productoService","lstProductos","lstProveedores","tipoBusqueda","lstDetalles","prodSeleccionado","provSeleccionado","muestraProductos","listar","data","titulo","cabecera","filas","map","prod","Descripcion","Precio","AthenasNet","formatPrecio","PrecioCompra","Stock","StockActual","Categoria","Id","setModalBuscarData","console","log","muestraProveedores","listarProveedor","prov","RzSocial","Representante","Direccion","Telefono","evtBtnBuscarProducto","getBtnBuscarProducto","addEventListener","evtBtnBuscarProveedor","getBtnBuscarProveedor","evtAbreModal","getModalBuscar","on","e","evtBtnSelModalBuscar","getModalContentBuscar","target","dataset","seleccionId","id","parseInt","find","setProducto","Codigo","formatCodigo","modal","setProveedor","evtBtnAgregarDet","getBtnAgregarDet","cantidad","getInputCantidad","value","encontrado","i","length","Producto","Cantidad","push","muestraDetalle","evtEliminaDetalle","getTblDetalle","productoId","filter","det","total","SubTotal","setDetalleData","setTotal","toFixed","evtFormPedido","getFormPedido","preventDefault","pedido","Proveedor","Detalles","crear","mensaje","color","texto","localStorage","setItem","JSON","stringify","window","location","href","MVC_URL_BASE","error","iniciar"],"mappings":"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","sourcesContent":["const PedidoController = (service, ui, proveedorService, productoService) => {\r\n    let lstProductos = [];\r\n    let lstProveedores = [];\r\n    let tipoBusqueda = null;//Producto, Proveedor\r\n    let lstDetalles = [];\r\n    let prodSeleccionado = {};\r\n    let provSeleccionado = {};\r\n\r\n    const muestraProductos = async () => {\r\n        lstProductos = await productoService.listar({});\r\n        const data = {\r\n            titulo: 'Buscar Producto',\r\n            cabecera: [\r\n                'Descripción',\r\n                'Precio',\r\n                'Stock',\r\n                'Categoría',\r\n                'Acciones'\r\n            ],\r\n            filas: lstProductos.map(prod => {\r\n\r\n                return {\r\n                    data: {\r\n                        Descripcion: prod.Descripcion,\r\n                        Precio: AthenasNet.formatPrecio(prod.PrecioCompra),\r\n                        Stock: prod.StockActual,\r\n                        Categoria: prod.Categoria.Descripcion\r\n                    },\r\n                    Id: prod.Id\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        ui.setModalBuscarData(data);\r\n        console.log(lstProductos)\r\n    }\r\n\r\n    const muestraProveedores = async () => {\r\n        lstProveedores = await proveedorService.listarProveedor({});\r\n        const data = {\r\n            titulo: 'Buscar Proveedor',\r\n            cabecera: [\r\n                'Razón Social',\r\n                'Representante',\r\n                'Dirección',\r\n                'Teléfono',\r\n                'Acciones'\r\n            ],\r\n            filas: lstProveedores.map(prov => {\r\n\r\n                return {\r\n                    data: {\r\n                        RzSocial: prov.RzSocial,\r\n                        Representante: prov.Representante,\r\n                        Direccion: prov.Direccion,\r\n                        Telefono: prov.Telefono\r\n                    },\r\n                    Id: prov.Id\r\n                }\r\n\r\n            })\r\n        }\r\n        ui.setModalBuscarData(data);\r\n        console.log(lstProveedores)\r\n    }\r\n\r\n    const evtBtnBuscarProducto = () => ui.getBtnBuscarProducto().addEventListener('click', () => tipoBusqueda = 'Producto');\r\n\r\n    const evtBtnBuscarProveedor = () => ui.getBtnBuscarProveedor().addEventListener('click', () => tipoBusqueda = 'Proveedor');\r\n\r\n    //const evtAbreModal = () => {\r\n    //    ui.getModalBuscar().on('show.bs.modal', async (e) => {\r\n    //        if (tipoBusqueda === 'Producto') await muestraProductos();\r\n    //        else await muestraProveedores();\r\n\r\n    //        evtBtnSelModalBuscar();\r\n    //    })\r\n    //}\r\n\r\n    const evtAbreModal = () => {\r\n        ui.getModalBuscar().on('show.bs.modal', (e) => {\r\n            if (tipoBusqueda === 'Producto') muestraProductos();\r\n            else muestraProveedores();\r\n        })\r\n    }\r\n\r\n    const evtBtnSelModalBuscar = () => {\r\n\r\n        ui.getModalContentBuscar().addEventListener('click', (e) => {\r\n\r\n            if (e.target.dataset.seleccionId) {\r\n\r\n                console.log('click de seleccion');\r\n\r\n                const id = parseInt(e.target.dataset.seleccionId);\r\n\r\n                if (tipoBusqueda === 'Producto') {\r\n\r\n                    prodSeleccionado = lstProductos.find(prod => prod.Id === id);\r\n\r\n                    ui.setProducto({\r\n                        ...prodSeleccionado,\r\n                        PrecioCompra: AthenasNet.formatPrecio(prodSeleccionado.PrecioCompra),\r\n                        Codigo: AthenasNet.formatCodigo(prodSeleccionado.Id, 'PRD', 4)\r\n                    });\r\n                    ui.getModalBuscar().modal('hide');\r\n                }\r\n                else {\r\n                    provSeleccionado = lstProveedores.find(prov => prov.Id === id);\r\n\r\n                    ui.setProveedor(provSeleccionado);\r\n                    ui.getModalBuscar().modal('hide');\r\n                }\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const evtBtnAgregarDet = () => {\r\n\r\n        ui.getBtnAgregarDet().addEventListener('click', () => {\r\n\r\n            const cantidad = ui.getInputCantidad().value;\r\n\r\n            let encontrado = false;\r\n\r\n            for (let i = 0; i < lstDetalles.length; i++) {\r\n\r\n                if (prodSeleccionado.Id === lstDetalles[i].Producto.Id) {\r\n\r\n                    lstDetalles[i].Cantidad = parseInt(cantidad);\r\n\r\n                    encontrado = true;\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            if (!encontrado) {\r\n                lstDetalles.push({\r\n\r\n                    Producto: {\r\n                        Id: prodSeleccionado.Id,\r\n                        Descripcion: prodSeleccionado.Descripcion\r\n                    },\r\n                    Cantidad: parseInt(cantidad),\r\n                    Precio: prodSeleccionado.PrecioCompra\r\n\r\n                });\r\n            }\r\n           \r\n\r\n            muestraDetalle();\r\n        })\r\n\r\n    }\r\n\r\n    const evtEliminaDetalle = () => {\r\n\r\n        ui.getTblDetalle().addEventListener('click', (e) => {\r\n\r\n            if (e.target.dataset.productoId) {\r\n                const id = parseInt(e.target.dataset.productoId);\r\n\r\n                lstDetalles = lstDetalles.filter(det => det.Producto.Id !== id);\r\n                muestraDetalle();\r\n\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const muestraDetalle = () => {\r\n        let total = 0;\r\n\r\n        const data = {\r\n\r\n            filas: lstDetalles.map(det => {\r\n\r\n                total += parseInt(det.Cantidad) * det.Precio;\r\n\r\n                return {\r\n                    data: {\r\n                        Codigo: AthenasNet.formatCodigo(det.Producto.Id, 'PRD', 4),\r\n                        Descripcion: det.Producto.Descripcion,\r\n                        Precio: AthenasNet.formatPrecio(det.Precio),\r\n                        Cantidad: det.Cantidad,\r\n                        SubTotal: AthenasNet.formatPrecio(det.Precio * det.Cantidad)\r\n                    },\r\n                    productoId: det.Producto.Id\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        ui.setDetalleData(data);\r\n        ui.setTotal(total.toFixed(2));\r\n    }\r\n\r\n    const evtFormPedido = () => {\r\n\r\n        ui.getFormPedido().addEventListener('submit', async (e) => {\r\n\r\n            e.preventDefault();\r\n\r\n            const pedido = {\r\n                Proveedor: {\r\n                    Id: provSeleccionado.Id\r\n                },\r\n                Detalles: lstDetalles\r\n            }\r\n            try {\r\n                debugger\r\n                await service.crear(pedido)\r\n                const mensaje = {\r\n                    color: 'bg-success',\r\n                    titulo: 'Registro exitoso',\r\n                    texto: 'El pedido fue registrado exitosamente'\r\n                }\r\n                localStorage.setItem('mensaje', JSON.stringify(mensaje));\r\n                window.location.href = AthenasNet.MVC_URL_BASE + 'Pedido';\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    const iniciar = () => {\r\n        evtBtnBuscarProducto();\r\n        evtBtnBuscarProveedor();\r\n        evtAbreModal();\r\n        evtBtnSelModalBuscar();\r\n        evtBtnAgregarDet();\r\n        evtEliminaDetalle();\r\n        evtFormPedido();\r\n    }\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}"],"file":"pedidoRegistrarController.js"}