{"version":3,"sources":["../es6/pedido/pedidoLstController.js"],"names":["PedidoController","service","ui","lstPedidos","pedSeleccionado","AthenasNet","Mant","muestraPedidos","filtros","listar","generarTabla","map","p","importe","Detalles","forEach","det","Precio","Cantidad","Id","Fecha","FFecha","Empleado","Trabajador","Nombre","Apellido","Proveedor","RzSocial","Importe","Estado","StockMin","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","window","location","href","MVC_URL_BASE","log","mostrarConfirmacion","manejaEnvioConf","getFormConfirmar","preventDefault","eliminar","ocultarConfirmacion","muestraToast","mensaje","titulo","cssClass","manejaEnvioFiltro","getFormFiltrar","getFiltros","iniciar","evtMostrarModMant"],"mappings":"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","sourcesContent":["\r\nconst PedidoController = (service, ui) => {\r\n    let lstPedidos = [];\r\n    let pedSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraPedidos = async (filtros = {}) => {\r\n        try {\r\n            lstPedidos = await service.listar(filtros);\r\n            ui.generarTabla(lstPedidos.map(p => {\r\n\r\n                const importe = 0;\r\n\r\n                p.Detalles.forEach(det => importe += (det.Precio * det.Cantidad) );\r\n\r\n                return {\r\n                    Id: p.Id,\r\n                    Fecha: p.FFecha,\r\n                    Empleado: p.Trabajador.Nombre + ' ' + p.Trabajador.Apellido,\r\n                    Proveedor: p.Proveedor.RzSocial,\r\n                    Importe: importe,\r\n                    Estado: p.StockMin\r\n                }\r\n                \r\n            }));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                pedSeleccionado = lstPedidos.find(c => c.Id === parseInt(id));\r\n                pedSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    window.location.href = `${AthenasNet.MVC_URL_BASE}/Pedido/Edit/${pedSeleccionado.Id}`\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(pedSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El pedido fue eliminado satisfactoriamente', titulo: 'Eliminaci贸n exitosa' })\r\n                await muestraPedidos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminaci贸n', titulo: 'Eliminaci贸n err贸nea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraPedidos(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const iniciar = () => {\r\n        muestraPedidos();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"pedidoLstController.js"}