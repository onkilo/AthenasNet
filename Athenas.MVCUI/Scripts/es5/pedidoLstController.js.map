{"version":3,"sources":["../es6/pedido/pedidoLstController.js"],"names":["PedidoController","service","ui","arg3","arg4","esVendedor","lstPedidos","pedidoSeleccionado","AthenasNet","Mant","muesraPedidos","filtros","listar","generarTabla","map","p","importe","Detalles","forEach","d","Cantidad","Precio","Id","Fecha","formatFecha","FFecha","Colaborador","Trabajador","Nombre","Apellido","Proveedor","RzSocial","Importe","formatPrecio","Estado","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraPoductos","setFormMantenedor","Valor","parseFloat","toFixed","Producto","FechaFin","FFechaFin","FechaInicio","FFechaInicio","log","mostrarConfirmacion","manejaEnvioConf","getFormConfirmar","preventDefault","eliminar","ocultarConfirmacion","muestraToast","mensaje","titulo","cssClass","manejaEnvioFiltro","getFormFiltrar","getFiltros","muestraMensaje","localStorage","getItem","JSON","parse","texto","color","removeItem","iniciar"],"mappings":"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","sourcesContent":["\r\nconst PedidoController = (service, ui, arg3, arg4, { esVendedor }) => {\r\n    let lstPedidos = [];\r\n    let pedidoSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muesraPedidos = async (filtros = {}) => {\r\n        try {\r\n            lstPedidos = await service.listar(filtros);\r\n            ui.generarTabla(lstPedidos.map(p => {\r\n\r\n                let importe = 0;\r\n\r\n                p.Detalles.forEach(d => importe += (d.Cantidad * d.Precio));\r\n\r\n                return {\r\n                    Id: p.Id,\r\n                    Fecha: AthenasNet.formatFecha(p.FFecha),\r\n                    Colaborador: p.Trabajador.Nombre + ' ' + p.Trabajador.Apellido,\r\n                    Proveedor: p.Proveedor.RzSocial,\r\n                    Importe: AthenasNet.formatPrecio(importe),\r\n                    Estado: p.Estado === 0 ? 'Por Recibir' : 'Recibido'\r\n                }\r\n\r\n            }));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                pedidoSeleccionado = lstPedidos.find(c => c.Id === parseInt(id));\r\n                pedidoSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraPoductos();\r\n                    Mant.setFormMantenedor(\r\n                        {\r\n                            ...pedidoSeleccionado,\r\n                            Valor: parseFloat(pedidoSeleccionado.Valor).toFixed(2),\r\n                            Producto: pedidoSeleccionado.Producto.Id,\r\n                            FechaFin: pedidoSeleccionado.FFechaFin,\r\n                            FechaInicio: pedidoSeleccionado.FFechaInicio\r\n                        },\r\n                        ['Activo', 'FFechaInicio', 'FFechaFin']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(pedidoSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El pedido fue eliminado satisfactoriamente', titulo: 'Eliminaci贸n exitosa' })\r\n                await muesraPedidos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminaci贸n', titulo: 'Eliminaci贸n err贸nea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muesraPedidos(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraMensaje = () => {\r\n        if (localStorage.getItem('mensaje')) {\r\n\r\n            const mensaje = JSON.parse(localStorage.getItem('mensaje'));\r\n\r\n            AthenasNet.muestraToast({ mensaje: mensaje.texto, titulo: mensaje.titulo, cssClass: mensaje.color })\r\n\r\n            localStorage.removeItem('mensaje');\r\n        }\r\n    }\r\n\r\n    const iniciar = async () => {\r\n        \r\n        manejaEvtTabla();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        await muesraPedidos();\r\n        muestraMensaje();\r\n\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"pedidoLstController.js"}