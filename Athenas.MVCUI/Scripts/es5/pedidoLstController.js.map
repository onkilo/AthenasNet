{"version":3,"sources":["../es6/pedido/pedidoLstController.js"],"names":["PedidoController","service","ui","arg3","arg4","esVendedor","lstPedidos","pedidoSeleccionado","AthenasNet","Mant","muesraPedidos","filtros","listar","generarTabla","map","p","importe","Detalles","forEach","d","Cantidad","Precio","Id","Fecha","formatFecha","FFecha","Colaborador","Trabajador","Nombre","Apellido","Proveedor","RzSocial","Importe","formatPrecio","Estado","recibe","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraPoductos","setFormMantenedor","Valor","parseFloat","toFixed","Producto","FechaFin","FFechaFin","FechaInicio","FFechaInicio","log","mostrarConfirmacion","abreModalPedido","total","det","pedidoMostrado","Codigo","formatCodigo","Direccion","Telefono","Descripcion","Subtotal","Total","setModalPedidoData","manejaEnvioConf","getFormConfirmar","preventDefault","eliminar","ocultarConfirmacion","muestraToast","mensaje","titulo","cssClass","manejaEnvioFiltro","getFormFiltrar","getFiltros","muestraMensaje","localStorage","getItem","JSON","parse","texto","color","removeItem","iniciar"],"mappings":"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","sourcesContent":["\r\nconst PedidoController = (service, ui, arg3, arg4, { esVendedor }) => {\r\n    let lstPedidos = [];\r\n    let pedidoSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muesraPedidos = async (filtros = {}) => {\r\n        try {\r\n            lstPedidos = await service.listar(filtros);\r\n            ui.generarTabla(lstPedidos.map(p => {\r\n\r\n                let importe = 0;\r\n\r\n                p.Detalles.forEach(d => importe += (d.Cantidad * d.Precio));\r\n\r\n                return {\r\n                    Id: p.Id,\r\n                    Fecha: AthenasNet.formatFecha(p.FFecha),\r\n                    Colaborador: p.Trabajador.Nombre + ' ' + p.Trabajador.Apellido,\r\n                    Proveedor: p.Proveedor.RzSocial,\r\n                    Importe: AthenasNet.formatPrecio(importe),\r\n                    Estado: p.Estado === 0 ? 'Por Recibir' : 'Recibido',\r\n                    recibe: (p.Estado === 0)\r\n                }\r\n\r\n            }));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                pedidoSeleccionado = lstPedidos.find(c => c.Id === parseInt(id));\r\n                pedidoSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraPoductos();\r\n                    Mant.setFormMantenedor(\r\n                        {\r\n                            ...pedidoSeleccionado,\r\n                            Valor: parseFloat(pedidoSeleccionado.Valor).toFixed(2),\r\n                            Producto: pedidoSeleccionado.Producto.Id,\r\n                            FechaFin: pedidoSeleccionado.FFechaFin,\r\n                            FechaInicio: pedidoSeleccionado.FFechaInicio\r\n                        },\r\n                        ['Activo', 'FFechaInicio', 'FFechaFin']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n                else if (accion === 'detalle') {\r\n                    ui.abreModalPedido();\r\n\r\n                    let total = 0;\r\n\r\n                    pedidoSeleccionado.Detalles.forEach(det => {\r\n                        total += parseInt(det.Cantidad) * parseFloat(det.Precio)\r\n                    })\r\n\r\n                    const pedidoMostrado = {\r\n                        Codigo: AthenasNet.formatCodigo(pedidoSeleccionado.Id, 'PED', 4),\r\n                        FFecha: pedidoSeleccionado.FFecha,\r\n                        Colaborador: pedidoSeleccionado.Trabajador.Nombre + ' ' + pedidoSeleccionado.Trabajador.Apellido,\r\n                        Proveedor: {\r\n                            RzSocial: pedidoSeleccionado.Proveedor.RzSocial,\r\n                            Direccion: pedidoSeleccionado.Proveedor.Direccion,\r\n                            Telefono: pedidoSeleccionado.Proveedor.Telefono\r\n                        },\r\n                        Detalles: pedidoSeleccionado.Detalles.map(det => ({\r\n                            Codigo: AthenasNet.formatCodigo(det.Producto.Id, 'PRD', 4),\r\n                            Descripcion: det.Producto.Descripcion,\r\n                            Precio: AthenasNet.formatPrecio(det.Precio),\r\n                            Cantidad: det.Cantidad,\r\n                            Subtotal: AthenasNet.formatPrecio(det.Cantidad * det.Precio)\r\n                        })),\r\n                        Total: total.toFixed(2)\r\n                    }\r\n\r\n                    ui.setModalPedidoData(pedidoMostrado);\r\n\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(pedidoSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El pedido fue eliminado satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muesraPedidos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muesraPedidos(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraMensaje = () => {\r\n        if (localStorage.getItem('mensaje')) {\r\n\r\n            const mensaje = JSON.parse(localStorage.getItem('mensaje'));\r\n\r\n            AthenasNet.muestraToast({ mensaje: mensaje.texto, titulo: mensaje.titulo, cssClass: mensaje.color })\r\n\r\n            localStorage.removeItem('mensaje');\r\n        }\r\n    }\r\n\r\n    const iniciar = async () => {\r\n        \r\n        manejaEvtTabla();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        await muesraPedidos();\r\n        muestraMensaje();\r\n\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"pedidoLstController.js"}