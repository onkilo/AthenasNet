{"version":3,"sources":["../es6/categoria/categoriaController.js"],"names":["CategoriaController","service","ui","lstCategorias","cateSeleccionada","AthenasNet","Mant","muestraCategorias","filtros","listarCategoria","generarTabla","map","c","Id","Descripcion","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","parseInt","setFormMantenedor","log","mostrarConfirmacion","manejaEnvioCat","getFormMantenedor","preventDefault","categoria","getCategoria","crearCategoria","cerrarModMant","muestraToast","mensaje","titulo","actualizarCategoria","cssClass","manejaEnvioConf","getFormConfirmar","eliminarCategoria","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","iniciar","evtMostrarModMant"],"mappings":"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","sourcesContent":["const CategoriaController = (service, ui) => {\r\n    let lstCategorias = [];\r\n    let cateSeleccionada = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraCategorias = async (filtros = {}) => {\r\n        try {\r\n            lstCategorias = await service.listarCategoria(filtros);\r\n            ui.generarTabla(lstCategorias.map(c => ({\r\n                Id: c.Id,\r\n                Descripcion: c.Descripcion\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                cateSeleccionada = lstCategorias.find(c => c.Id === parseInt(id));\r\n                cateSeleccionada.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    Mant.setFormMantenedor(cateSeleccionada);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioCat = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            const categoria = ui.getCategoria();\r\n            try {\r\n                if (categoria.accion === 'registrar') {\r\n                    await service.crearCategoria(categoria);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La categoría se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (categoria.accion === 'editar') {\r\n                    await service.actualizarCategoria(categoria);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La categoría se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraCategorias();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (categoria.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (categoria.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminarCategoria(parseInt(cateSeleccionada.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'La categoría fue eliminada satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraCategorias();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraCategorias(filtros);\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        muestraCategorias();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioCat();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}"],"file":"categoriaController.js"}