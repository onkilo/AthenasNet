{"version":3,"sources":["../es6/categoria/categoriaController.js"],"names":["CategoriaController","service","ui","usuarioService","lstCategorias","cateSeleccionada","lstRoles","AthenasNet","Mant","muestraCategorias","filtros","listarCategoria","data","filas","map","c","Id","Descripcion","edita","length","Nombre","elimina","iniCodigo","generarTabla","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","parseInt","setFormMantenedor","log","mostrarConfirmacion","manejaEnvioCat","getFormMantenedor","preventDefault","categoria","getCategoria","crearCategoria","cerrarModMant","muestraToast","mensaje","titulo","actualizarCategoria","cssClass","manejaEnvioConf","getFormConfirmar","eliminarCategoria","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","iniciar","rolesActuales","evtMostrarModMant"],"mappings":"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","sourcesContent":["const CategoriaController = (service, ui, usuarioService) => {\r\n    let lstCategorias = [];\r\n    let cateSeleccionada = {};\r\n    let lstRoles = [];\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraCategorias = async (filtros = {}) => {\r\n        try {\r\n            lstCategorias = await service.listarCategoria(filtros);\r\n\r\n            const data = {\r\n                filas: lstCategorias.map(c => ({\r\n                    Id: c.Id,\r\n                    Descripcion: c.Descripcion\r\n                })),//=> item\r\n                edita: !(lstRoles.length == 1 && lstRoles[0].Nombre === 'Vendedor'),\r\n                elimina: !(lstRoles.length == 1 && lstRoles[0].Nombre === 'Vendedor'),\r\n                iniCodigo: 'CT'\r\n            }\r\n\r\n            ui.generarTabla(data);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                cateSeleccionada = lstCategorias.find(c => c.Id === parseInt(id));\r\n                cateSeleccionada.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    Mant.setFormMantenedor(cateSeleccionada);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n                else if (accion === 'detalle') {\r\n                    Mant.setFormMantenedor(cateSeleccionada, [], true);\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioCat = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            const categoria = ui.getCategoria();\r\n            try {\r\n                if (categoria.accion === 'registrar') {\r\n                    await service.crearCategoria(categoria);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La categoría se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (categoria.accion === 'editar') {\r\n                    await service.actualizarCategoria(categoria);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La categoría se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraCategorias();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (categoria.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (categoria.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminarCategoria(parseInt(cateSeleccionada.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'La categoría fue eliminada satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraCategorias();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraCategorias(filtros);\r\n        })\r\n    }\r\n\r\n    const iniciar = async () => {\r\n\r\n        lstRoles = await usuarioService.rolesActuales();\r\n        console.log(lstRoles)\r\n        muestraCategorias();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioCat();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}"],"file":"categoriaController.js"}