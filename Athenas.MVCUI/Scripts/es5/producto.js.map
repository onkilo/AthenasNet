{"version":3,"sources":["../es6/producto.js"],"names":["ProductoService","crear","producto","AthenasNet","llamadaApi","type","data","JSON","stringify","url","respuesta","actualizar","listar","filtros","filtrosDefecto","Descripcion","Data","eliminar","id","Id","buscar","ProductoUI","getFiltros","arrFiltros","Mant","generarTabla","lstProductos","filas","edita","elimina","iniCodigo","compilaTemplate","ID_TEMP_TBL_BODY","SEL_TBL_BODY","$","SEL_TBL_MANT","DataTable","getProducto","getEntidad","getImgInput","document","querySelector","getImgDisplay","getBase64Data","archivo","Promise","resolve","reject","lector","FileReader","onload","evt","target","result","onerror","err","readAsDataURL","ProductoController","service","ui","prodSeleccionado","muestraProductos","map","p","PrecioCompra","PrecioVenta","StockActual","StockMin","Categoria","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","dataset","accion","find","c","parseInt","setFormMantenedor","src","Imagen","log","mostrarConfirmacion","manejaEnvioProd","getFormMantenedor","preventDefault","startsWith","Base64Imagen","cerrarModMant","muestraToast","mensaje","titulo","categoria","cssClass","manejaEnvioConf","getFormConfirmar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","manejaImgInput","dir","files","iniciar","configuraTamModal","evtMostrarModMant","window","controller"],"mappings":"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","sourcesContent":["\r\nconst ProductoService = () => {\r\n\r\n    const crear = async (producto) => {\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            type: 'POST',\r\n            data: JSON.stringify(producto),\r\n            url: 'Producto/Crear'\r\n        })\r\n\r\n        return respuesta;\r\n    }\r\n\r\n    const actualizar = async (producto) => {\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            type: 'POST',\r\n            data: JSON.stringify(producto),\r\n            url: 'Producto/Actualizar'\r\n        })\r\n\r\n        return respuesta;\r\n    }\r\n\r\n    const listar = async (filtros) => {\r\n\r\n        const filtrosDefecto = {\r\n            Descripcion: '',\r\n            ...filtros\r\n        }\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: filtrosDefecto,\r\n            url: 'Producto/Listar'\r\n        })\r\n\r\n        return respuesta.Data;\r\n    }\r\n\r\n    const eliminar = async (id) => {\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Producto/Eliminar'\r\n        })\r\n        return respuesta\r\n    }\r\n\r\n    const buscar = async (id) => {\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Producto/Obtener'\r\n        })\r\n        return respuesta;\r\n\r\n    }\r\n\r\n    return {\r\n        crear,\r\n        actualizar,\r\n        listar,\r\n        eliminar,\r\n        buscar\r\n    }\r\n}\r\n\r\nconst ProductoUI = () => {\r\n\r\n    const getFiltros = () => {\r\n        const arrFiltros = ['Descripcion'];\r\n\r\n        return AthenasNet.Mant.getFiltros(arrFiltros);\r\n\r\n    }\r\n\r\n    const generarTabla = (lstProductos) => {\r\n\r\n        const data = {\r\n            filas: lstProductos,\r\n            edita: true,\r\n            elimina: true,\r\n            iniCodigo: 'PD'\r\n        }\r\n\r\n        AthenasNet.compilaTemplate(AthenasNet.ID_TEMP_TBL_BODY, data, AthenasNet.Mant.SEL_TBL_BODY);\r\n        $(AthenasNet.Mant.SEL_TBL_MANT).DataTable();\r\n    }\r\n\r\n    const getProducto = () => {\r\n        return AthenasNet.Mant.getEntidad([\r\n            'Descripcion',\r\n            'Id',\r\n            'accion',\r\n            'PrecioCompra',\r\n            'PrecioVenta',\r\n            'StockActual',\r\n            'StockMin',\r\n            'Imagen']);\r\n    }\r\n\r\n    const getImgInput = () => document.querySelector('#form-mantenedor #Imagen');\r\n\r\n    const getImgDisplay = () => document.querySelector('#imgDisplay');\r\n\r\n    const getBase64Data = (archivo) => {\r\n        //const lector = new FileReader();\r\n        //lector.onload = (evt) => {\r\n        //    console.log(evt.target.result);\r\n        //    getImgDisplay().src = evt.target.result;\r\n        //};\r\n        //lector.onerror = (err) => {\r\n        //    console.error(err);\r\n        //};\r\n\r\n\r\n        //lector.readAsDataURL(archivo);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const lector = new FileReader();\r\n            lector.onload = (evt) => {\r\n                resolve(evt.target.result);\r\n            };\r\n            lector.onerror = (err) => {\r\n                reject(err);\r\n            };\r\n\r\n            lector.readAsDataURL(archivo);\r\n        });\r\n    }\r\n\r\n    return {\r\n        getProducto,\r\n        generarTabla,\r\n        getFiltros,\r\n        getImgInput,\r\n        getBase64Data,\r\n        getImgDisplay\r\n    }\r\n}\r\n\r\nconst ProductoController = (service, ui) => {\r\n    let lstProductos = [];\r\n    let prodSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraProductos = async (filtros = {}) => {\r\n        try {\r\n            lstProductos = await service.listar(filtros);\r\n            ui.generarTabla(lstProductos.map(p => ({\r\n                Id: p.Id,\r\n                Descripcion: p.Descripcion,\r\n                PrecioCompra: p.PrecioCompra,\r\n                PrecioVenta: p.PrecioVenta,\r\n                StockActual: p.StockActual,\r\n                StockMin: p.StockMin,\r\n                Categoria: p.Categoria.Descripcion\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                prodSeleccionado = lstProductos.find(c => c.Id === parseInt(id));\r\n                prodSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    Mant.setFormMantenedor({ ...prodSeleccionado, Categoria: prodSeleccionado.Categoria.Id }, ['Imagen', 'Activo', 'Base64Imagen']);\r\n                    ui.getImgDisplay().src = prodSeleccionado.Imagen;\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioProd = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            const producto = ui.getProducto();\r\n            if (ui.getImgDisplay().src.startsWith('data')) {\r\n                producto.Base64Imagen = ui.getImgDisplay().src;\r\n            } \r\n            \r\n            delete producto.Imagen;\r\n            console.log(producto);\r\n            try {\r\n                if (producto.accion === 'registrar') {\r\n                    await service.crear(producto);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El producto se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (producto.accion === 'editar') {\r\n                    await service.actualizar(producto);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El producto se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraProductos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (categoria.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (categoria.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(prodSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El producto fue eliminado satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraProductos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraProductos(filtros);\r\n        })\r\n    }\r\n\r\n    const manejaImgInput = () => {\r\n        ui.getImgInput().addEventListener('input', async (evt) => {\r\n            console.dir(evt.target);\r\n            try {\r\n                const url = await ui.getBase64Data(evt.target.files[0]);\r\n                ui.getImgDisplay().src = url;\r\n\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    const iniciar = () => {\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraProductos();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioProd();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        manejaImgInput();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => {\r\n\r\n    const service = ProductoService();\r\n\r\n    const ui = ProductoUI();\r\n\r\n    const controller = ProductoController(service, ui);\r\n\r\n    controller.iniciar();\r\n\r\n})"],"file":"producto.js"}