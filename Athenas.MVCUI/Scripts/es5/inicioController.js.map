{"version":3,"sources":["../es6/inicio/inicioController.js"],"names":["InicioController","ui","usuarioService","lstRoles","muestraInfoPrincipal","infoPrincipal","setCantCliente","CantClientes","setCantProducto","CantProductos","setCantUsuario","CantUsuarios","setCantVenta","CantVentas","setPromoData","filas","PromosActuales","map","prom","Producto","FDescuento","Tipo","AthenasNet","formatPrecio","Valor","toFixed","setProductoData","ProductosBajoStock","console","log","error","muestraToast","cssClass","mensaje","titulo","validacionUI","rolesActuales","length","Nombre","ocultarVendedor","iniciar"],"mappings":";;;;;;AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,EAAD,EAAKC,cAAL,EAAwB;AAE7C,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAMC,oBAAoB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEOF,cAAc,CAACG,aAAf,EAFP;;AAAA;AAEfA,cAAAA,aAFe;AAGrBJ,cAAAA,EAAE,CAACK,cAAH,CAAkBD,aAAa,CAACE,YAAhC;AACAN,cAAAA,EAAE,CAACO,eAAH,CAAmBH,aAAa,CAACI,aAAjC;AACAR,cAAAA,EAAE,CAACS,cAAH,CAAkBL,aAAa,CAACM,YAAhC;AACAV,cAAAA,EAAE,CAACW,YAAH,CAAgBP,aAAa,CAACQ,UAA9B;AACAZ,cAAAA,EAAE,CAACa,YAAH,CAAgB;AACZC,gBAAAA,KAAK,EAAEV,aAAa,CAACW,cAAd,CAA6BC,GAA7B,CAAiC,UAAAC,IAAI;AAAA,yBACxC;AACIC,oBAAAA,QAAQ,EAAED,IAAI,CAACC,QADnB;AAEIC,oBAAAA,UAAU,EAAGF,IAAI,CAACG,IAAL,KAAc,CAAf,GAAoBC,UAAU,CAACC,YAAX,CAAwBL,IAAI,CAACM,KAA7B,CAApB,eAA+DN,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CAA/D;AAFhB,mBADwC;AAAA,iBAArC;AADK,eAAhB;AAOAxB,cAAAA,EAAE,CAACyB,eAAH,CAAmB;AACfX,gBAAAA,KAAK,EAAEV,aAAa,CAACsB;AADN,eAAnB;AAGAC,cAAAA,OAAO,CAACC,GAAR,CAAYxB,aAAZ;AAjBqB;AAAA;;AAAA;AAAA;AAAA;AAoBrBuB,cAAAA,OAAO,CAACE,KAAR;AACAR,cAAAA,UAAU,CAACS,YAAX,CAAwB;AAAEC,gBAAAA,QAAQ,EAAE,WAAZ;AAAyBC,gBAAAA,OAAO,EAAE,iCAAlC;AAAqEC,gBAAAA,MAAM,EAAE;AAA7E,eAAxB;;AArBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApB9B,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAyBA,MAAM+B,YAAY;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGIjC,cAAc,CAACkC,aAAf,EAHJ;;AAAA;AAGbjC,cAAAA,QAHa;AAIbyB,cAAAA,OAAO,CAACC,GAAR,CAAY1B,QAAZ;;AAEA,kBAAIA,QAAQ,CAACkC,MAAT,IAAmB,CAAnB,IAAwBlC,QAAQ,CAAC,CAAD,CAAR,CAAYmC,MAAZ,KAAuB,UAAnD,EAA+D;AAC3DrC,gBAAAA,EAAE,CAACsC,eAAH;AACH;;AARY;AAAA;;AAAA;AAAA;AAAA;AAYbX,cAAAA,OAAO,CAACE,KAAR;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZK,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAmBA,MAAMK,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACNL,YAAY,EADN;;AAAA;AAEZ/B,cAAAA,oBAAoB;;AAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPoC,OAAO;AAAA;AAAA;AAAA,KAAb;;AAKA,SAAO;AACHA,IAAAA,OAAO,EAAPA;AADG,GAAP;AAGH,CAxDD","sourcesContent":["const InicioController = (ui, usuarioService) => {\r\n\r\n    let lstRoles = [];\r\n\r\n    const muestraInfoPrincipal = async () => {\r\n        try {\r\n            const infoPrincipal = await usuarioService.infoPrincipal();\r\n            ui.setCantCliente(infoPrincipal.CantClientes);\r\n            ui.setCantProducto(infoPrincipal.CantProductos);\r\n            ui.setCantUsuario(infoPrincipal.CantUsuarios);\r\n            ui.setCantVenta(infoPrincipal.CantVentas);\r\n            ui.setPromoData({\r\n                filas: infoPrincipal.PromosActuales.map(prom => (\r\n                    {\r\n                        Producto: prom.Producto,\r\n                        FDescuento: (prom.Tipo === 0) ? AthenasNet.formatPrecio(prom.Valor) : `% ${prom.Valor.toFixed(2)}`                \r\n                    }))\r\n            });\r\n            ui.setProductoData({\r\n                filas: infoPrincipal.ProductosBajoStock\r\n            });\r\n            console.log(infoPrincipal)\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n            AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Error al obtener la informaciÃ³n', titulo: 'Error' })\r\n        }\r\n    }\r\n\r\n    const validacionUI = async () => {\r\n\r\n        try {\r\n            lstRoles = await usuarioService.rolesActuales();\r\n            console.log(lstRoles);\r\n\r\n            if (lstRoles.length == 1 && lstRoles[0].Nombre === 'Vendedor') {\r\n                ui.ocultarVendedor();\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n    const iniciar = async () => {\r\n        await validacionUI()\r\n        muestraInfoPrincipal();\r\n    }\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}"],"file":"inicioController.js"}