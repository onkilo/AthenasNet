{"version":3,"sources":["../es6/promocion/promocionController.js"],"names":["ProductoController","service","ui","productoService","lstPromociones","promSeleccionado","AthenasNet","Mant","muestraPromociones","filtros","listar","generarTabla","map","p","Id","Producto","Descripcion","Tipo","Valor","toFixed","FechaInicio","FechaFin","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraPoductos","setFormMantenedor","log","mostrarConfirmacion","manejaEnvioProm","getFormMantenedor","preventDefault","promocion","getPromocion","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","lstProductos","tempCatData","filas","compilaTemplate","ID_TEMP_PROD","SEL_CBO_PROD","manejaAbreModal","getBtnNuevo","iniciar","configuraTamModal","evtMostrarModMant"],"mappings":"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","sourcesContent":["\r\nconst ProductoController = (service, ui, productoService) => {\r\n    let lstPromociones = [];\r\n    let promSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraPromociones = async (filtros = {}) => {\r\n        try {\r\n            lstPromociones = await service.listar(filtros);\r\n            ui.generarTabla(lstPromociones.map(p => ({\r\n                Id: p.Id,\r\n                Producto: p.Producto.Descripcion,\r\n                Tipo: (p.Tipo === 0) ? 'Fijo' : 'Porcentual',\r\n                Valor: (p.Tipo === 0) ? `S/. ${p.Valor.toFixed(2)}` : `% ${p.Valor.toFixed(2)}`,\r\n                FechaInicio: p.FechaFin,\r\n                FechaFin: p.FechaFin\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                promSeleccionado = lstPromociones.find(c => c.Id === parseInt(id));\r\n                promSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraPoductos();\r\n                    Mant.setFormMantenedor({ ...promSeleccionado, Producto: promSeleccionado.Producto.Id }, [ 'Activo']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioProm = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            let promocion = ui.getPromocion();\r\n            promocion = {\r\n                ...promocion,\r\n                Producto: {\r\n                    Id: parseInt(promocion.Producto)\r\n                }\r\n            }\r\n            console.log(promocion);\r\n            try {\r\n                if (promocion.accion === 'registrar') {\r\n                    await service.crear(promocion);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La promoción se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (promocion.accion === 'editar') {\r\n                    await service.actualizar(promocion);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La promoción se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraPromociones();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (promocion.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (promocion.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(promSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'La promoción fue eliminada satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraPromociones();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraPromociones(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraPoductos = async () => {\r\n        const lstProductos = await productoService.listar({});\r\n        const tempCatData = {\r\n            filas: lstProductos\r\n        }\r\n        console.log(lstProductos);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_PROD, tempCatData, ui.SEL_CBO_PROD);\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraPoductos();\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraPromociones();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioProm();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        debugger\r\n        manejaAbreModal();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"promocionController.js"}