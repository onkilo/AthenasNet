{"version":3,"sources":["../es6/promocion/promocionController.js"],"names":["ProductoController","service","ui","productoService","lstPromociones","promSeleccionado","AthenasNet","Mant","muestraPromociones","filtros","listar","generarTabla","map","p","Id","Producto","Descripcion","Tipo","Valor","toFixed","FechaInicio","formatFecha","FFechaInicio","FechaFin","FFechaFin","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraPoductos","setFormMantenedor","parseFloat","log","mostrarConfirmacion","manejaEnvioProm","formMantenedor","getFormMantenedor","preventDefault","checkValidity","promocion","getPromocion","tienePromociones","muestraMsjTienePromo","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","esFormularioValido","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","lstProductos","tempCatData","filas","compilaTemplate","ID_TEMP_PROD","SEL_CBO_PROD","manejaAbreModal","getBtnNuevo","iniciar","configuraTamModal","evtMostrarModMant"],"mappings":"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","sourcesContent":["\r\nconst ProductoController = (service, ui, productoService) => {\r\n    let lstPromociones = [];\r\n    let promSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraPromociones = async (filtros = {}) => {\r\n        try {\r\n            lstPromociones = await service.listar(filtros);\r\n            ui.generarTabla(lstPromociones.map(p => ({\r\n                Id: p.Id,\r\n                Producto: p.Producto.Descripcion,\r\n                Tipo: (p.Tipo === 0) ? 'Fijo' : 'Porcentual',\r\n                Valor: (p.Tipo === 0) ? `S/. ${p.Valor.toFixed(2)}` : `% ${p.Valor.toFixed(2)}`,\r\n                FechaInicio: AthenasNet.formatFecha(p.FFechaInicio),\r\n                FechaFin: AthenasNet.formatFecha(p.FFechaFin)\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                promSeleccionado = lstPromociones.find(c => c.Id === parseInt(id));\r\n                promSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraPoductos();\r\n                    Mant.setFormMantenedor(\r\n                        {\r\n                            ...promSeleccionado,\r\n                            Valor: parseFloat(promSeleccionado.Valor).toFixed(2),\r\n                            Producto: promSeleccionado.Producto.Id,\r\n                            FechaFin: promSeleccionado.FFechaFin,\r\n                            FechaInicio: promSeleccionado.FFechaInicio\r\n                        },\r\n                        ['Activo', 'FFechaInicio', 'FFechaFin']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioProm = () => {\r\n        const formMantenedor = Mant.getFormMantenedor();\r\n        formMantenedor.addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n            if (formMantenedor.checkValidity()) {\r\n                let promocion = ui.getPromocion();\r\n                promocion = {\r\n                    ...promocion,\r\n                    Producto: {\r\n                        Id: parseInt(promocion.Producto)\r\n                    }\r\n                }\r\n                console.log(promocion);\r\n                try {\r\n                    if (promocion.accion === 'registrar') {\r\n                        const tienePromociones = await service.tienePromociones(promocion.Producto.Id, promocion.FechaInicio, promocion.FechaFin);\r\n                        console.log(tienePromociones)\r\n\r\n                        if (!tienePromociones) {\r\n                            ui.muestraMsjTienePromo(false);\r\n                            await service.crear(promocion);\r\n                            Mant.cerrarModMant();\r\n                            AthenasNet.muestraToast({ mensaje: 'La promoción se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                            await muestraPromociones();\r\n                        }\r\n                        else {\r\n                            ui.muestraMsjTienePromo(true);\r\n                        }\r\n\r\n                    }\r\n                    else if (promocion.accion === 'editar') {\r\n                        const tienePromociones = await service.tienePromociones(promocion.Producto.Id, promocion.FechaInicio, promocion.FechaFin, promocion.Id);\r\n                        if (!tienePromociones) {\r\n                            ui.muestraMsjTienePromo(false);\r\n                            await service.actualizar(promocion);\r\n                            Mant.cerrarModMant();\r\n                            AthenasNet.muestraToast({ mensaje: 'La promoción se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                            await muestraPromociones();\r\n                        }\r\n                        else {\r\n                            ui.muestraMsjTienePromo(true);\r\n                        }\r\n                    }\r\n\r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                    const mensaje = (promocion.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                    const titulo = (promocion.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                    AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n                }\r\n\r\n            }\r\n            else {\r\n                Mant.esFormularioValido(false);\r\n            }\r\n            \r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(promSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'La promoción fue eliminada satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraPromociones();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraPromociones(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraPoductos = async () => {\r\n        const lstProductos = await productoService.listar({});\r\n        const tempCatData = {\r\n            filas: lstProductos\r\n        }\r\n        console.log(lstProductos);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_PROD, tempCatData, ui.SEL_CBO_PROD);\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraPoductos();\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraPromociones();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioProm();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        debugger\r\n        manejaAbreModal();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"promocionController.js"}