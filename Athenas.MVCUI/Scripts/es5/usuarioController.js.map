{"version":3,"sources":["../es6/usuario/usuarioController.js"],"names":["UsuarioController","service","ui","lstUsuario","usuSeleccionado","AthenasNet","Mant","muestraUsuarios","filtros","listar","generarTabla","map","p","Id","Nombre","Apellido","Dni","Telefono","Sexo","Roles","rol","join","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraRoles","log","setFormMantenedor","mostrarConfirmacion","manejaEnvioUsu","getFormMantenedor","preventDefault","usuario","getUsuario","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","roles","lstRoles","encontrado","rolUsuario","selected","tempRolData","filas","compilaTemplate","ID_TEMP_ROL","SEL_CBO_ROL","$","select2","manejaAbreModal","getBtnNuevo","iniciar","configuraTamModal","evtMostrarModMant"],"mappings":"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","sourcesContent":["\r\nconst UsuarioController = (service, ui) => {\r\n    let lstUsuario = [];\r\n    let usuSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraUsuarios = async (filtros = {}) => {\r\n        try {\r\n            lstUsuario = await service.listar(filtros);\r\n            ui.generarTabla(lstUsuario.map(p => ({\r\n                Id: p.Id,\r\n                Nombre: p.Nombre,\r\n                Apellido: p.Apellido,\r\n                Dni: p.Dni,\r\n                Telefono: p.Telefono,\r\n                Sexo: p.Sexo === 'M' ? 'Masculino' : 'Femenino',\r\n                Roles: p.Roles.map(rol => rol.Nombre).join(', ')\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                usuSeleccionado = lstUsuario.find(c => c.Id === parseInt(id));\r\n                usuSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraRoles();\r\n                    console.log(usuSeleccionado)\r\n                    Mant.setFormMantenedor({ ...usuSeleccionado }, ['SexoDescripcion', 'Activo', 'Token', 'Roles']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioUsu = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n            debugger\r\n            let usuario = ui.getUsuario();\r\n            \r\n            usuario = {\r\n                ...usuario,\r\n                Roles: usuario.Roles.map(rol => ({ Id: parseInt(rol) }))\r\n            }\r\n            console.log(usuario);\r\n            try {\r\n                if (usuario.accion === 'registrar') {\r\n                    await service.crear(usuario);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El usuario se registr贸 satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (usuario.accion === 'editar') {\r\n                    await service.actualizar(usuario);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El usuario se actualiz贸 satisfactoriamente', titulo: 'Actualizaci贸n exitosa' })\r\n                }\r\n                usuSeleccionado = {}\r\n                await muestraUsuarios();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (usuario.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualizaci贸n';\r\n                const titulo = (usuario.accion === 'registrar') ? 'Registro err贸neo' : 'Actualizaci贸n err贸nea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(usuSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El usuario fue eliminado satisfactoriamente', titulo: 'Eliminaci贸n exitosa' })\r\n                await muestraUsuarios();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminaci贸n', titulo: 'Eliminaci贸n err贸nea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraUsuarios(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraRoles = async () => {\r\n        let lstRoles = await service.roles({});\r\n\r\n        if (usuSeleccionado.Roles) {\r\n            lstRoles = lstRoles.map(rol => {\r\n\r\n                const encontrado = usuSeleccionado.Roles.find((rolUsuario) => {\r\n                    return (rolUsuario.Id === rol.Id)\r\n                })\r\n\r\n                if (encontrado) {\r\n                    return {\r\n                        ...rol,\r\n                        selected: true\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        ...rol,\r\n                        selected: false\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        const tempRolData = {\r\n            filas: lstRoles\r\n        }\r\n        console.log(lstRoles);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_ROL, tempRolData, ui.SEL_CBO_ROL);\r\n        $('#cbo-roles').select2();\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraRoles();\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraUsuarios();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioUsu();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        manejaAbreModal();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"usuarioController.js"}