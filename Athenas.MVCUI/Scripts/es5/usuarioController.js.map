{"version":3,"sources":["../es6/usuario/usuarioController.js"],"names":["UsuarioController","service","ui","lstUsuarios","usuSeleccionado","AthenasNet","Mant","muestraUsuarios","filtros","listar","generarTabla","map","u","Id","Nombre","Apellido","DNI","Dni","Sexo","Telefono","Roles","rol","join","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraRoles","setFormMantenedor","log","mostrarConfirmacion","manejaEnvioUsu","getFormMantenedor","preventDefault","usuario","getUsuario","r","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","roles","lstRoles","rolesDisplay","encontrado","sel","selected","tempCatData","filas","compilaTemplate","ID_TEMP_ROL","SEL_CBO_ROL","$","select2","manejaAbreModal","getBtnNuevo","iniciar","configuraTamModal","evtMostrarModMant"],"mappings":"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","sourcesContent":["\r\nconst UsuarioController = (service, ui) => {\r\n    let lstUsuarios = [];\r\n    let usuSeleccionado = {};\r\n    //let lstRoles = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraUsuarios = async (filtros = {}) => {\r\n        try {\r\n            lstUsuarios = await service.listar(filtros);\r\n            ui.generarTabla(lstUsuarios.map(u => ({\r\n                Id: u.Id,\r\n                Nombre: u.Nombre,\r\n                Apellido: u.Apellido,\r\n                DNI: u.Dni,\r\n                Sexo: u.Sexo === 'M' ? 'Masculino' : 'Femenino',\r\n                Telefono: u.Telefono,\r\n                Roles: u.Roles.map(rol => rol.Nombre).join(',')\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                usuSeleccionado = lstUsuarios.find(c => c.Id === parseInt(id));\r\n                usuSeleccionado.accion = accion;\r\n                \r\n                if (accion === 'editar') {\r\n                    await muestraRoles();\r\n                    delete usuSeleccionado.Roles\r\n                    Mant.setFormMantenedor(\r\n                        usuSeleccionado,\r\n                        ['Activo', 'SexoDescripcion', 'Token']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n    const manejaEnvioUsu = () => {\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            let usuario = ui.getUsuario();\r\n            usuario = {\r\n                ...usuario,\r\n                Roles: usuario.Roles.map(r => ({ Id: parseInt(r) }))\r\n                //Producto: {\r\n                //    Id: parseInt(usuario.Producto)\r\n                //}\r\n            }\r\n            console.log(usuario);\r\n            try {\r\n                if (usuario.accion === 'registrar') {\r\n                    await service.crear(usuario);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El usuario se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (usuario.accion === 'editar') {\r\n                    await service.actualizar(usuario);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El usuario se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraUsuarios();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (usuario.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (usuario.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(usuSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El usuario fue eliminada satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraUsuarios();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraUsuarios(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraRoles = async () => {\r\n        const lstRoles = await service.roles({});\r\n\r\n        let rolesDisplay = lstRoles;\r\n\r\n        if (usuSeleccionado.Roles) {\r\n            rolesDisplay = lstRoles.map(r => {\r\n                const encontrado = usuSeleccionado.Roles.find(sel => {\r\n                    return sel.Id === r.Id\r\n                });\r\n\r\n                if (encontrado)\r\n                    return { ...r, selected: true }\r\n                else\r\n                    return r\r\n            })\r\n        }\r\n\r\n        const tempCatData = {\r\n            filas: rolesDisplay\r\n        }\r\n        console.log(lstRoles);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_ROL, tempCatData, ui.SEL_CBO_ROL);\r\n        $('#cbo-roles').select2();\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraRoles();\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraUsuarios();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioUsu();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        manejaAbreModal();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}"],"file":"usuarioController.js"}