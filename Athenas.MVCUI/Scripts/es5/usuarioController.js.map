{"version":3,"sources":["../es6/usuario/usuarioController.js"],"names":["UsuarioController","service","ui","rolService","lstUsuarios","usuSeleccionado","lstRoles","AthenasNet","Mant","muestraUsuarios","filtros","listar","generarTabla","map","p","Id","Producto","Descripcion","Tipo","Valor","toFixed","FechaInicio","formatFecha","FFechaInicio","FechaFin","FFechaFin","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","log","Date","muestraPoductos","setFormMantenedor","parseFloat","mostrarConfirmacion","fecha","arrElementos","split","nuevaFecha","reverse","join","manejaEnvioProm","getFormMantenedor","preventDefault","promocion","getPromocion","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","lstProductos","tempCatData","filas","compilaTemplate","ID_TEMP_PROD","SEL_CBO_PROD","manejaAbreModal","getBtnNuevo","iniciar","configuraTamModal","evtMostrarModMant"],"mappings":"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","sourcesContent":["\r\nconst UsuarioController = (service, ui, rolService) => {\r\n    let lstUsuarios = [];\r\n    let usuSeleccionado = {};\r\n    let lstRoles = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraUsuarios = async (filtros = {}) => {\r\n        try {\r\n            lstUsuarios = await service.listar(filtros);\r\n            ui.generarTabla(lstUsuarios.map(p => ({\r\n                Id: p.Id,\r\n                Producto: p.Producto.Descripcion,\r\n                Tipo: (p.Tipo === 0) ? 'Fijo' : 'Porcentual',\r\n                Valor: (p.Tipo === 0) ? `S/. ${p.Valor.toFixed(2)}` : `% ${p.Valor.toFixed(2)}`,\r\n                FechaInicio: formatFecha(p.FFechaInicio),\r\n                FechaFin: formatFecha(p.FFechaFin)\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                usuSeleccionado = lstUsuarios.find(c => c.Id === parseInt(id));\r\n                usuSeleccionado.accion = accion;\r\n                console.log(new Date(usuSeleccionado.FFechaInicio + ' 00:00:00'))\r\n                if (accion === 'editar') {\r\n                    await muestraPoductos();\r\n                    Mant.setFormMantenedor(\r\n                        {\r\n                            ...usuSeleccionado,\r\n                            Valor: parseFloat(usuSeleccionado.Valor).toFixed(2),\r\n                            Producto: usuSeleccionado.Producto.Id,\r\n                            FechaFin: usuSeleccionado.FFechaFin,\r\n                            FechaInicio: usuSeleccionado.FFechaInicio\r\n                        }, ['Activo', 'FFechaInicio', 'FFechaFin']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const formatFecha = (fecha) => {\r\n\r\n        //yyyy-MM-dd\r\n        const arrElementos = fecha.split('-');\r\n        const nuevaFecha = arrElementos.reverse().join('/');\r\n        return nuevaFecha;\r\n    }\r\n\r\n    const manejaEnvioProm = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            let promocion = ui.getPromocion();\r\n            promocion = {\r\n                ...promocion,\r\n                Producto: {\r\n                    Id: parseInt(promocion.Producto)\r\n                }\r\n            }\r\n            console.log(promocion);\r\n            try {\r\n                if (promocion.accion === 'registrar') {\r\n                    await service.crear(promocion);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La promoción se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (promocion.accion === 'editar') {\r\n                    await service.actualizar(promocion);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'La promoción se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraUsuarios();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (promocion.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (promocion.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(usuSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'La promoción fue eliminada satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraUsuarios();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraUsuarios(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraPoductos = async () => {\r\n        const lstProductos = await rolService.listar({});\r\n        const tempCatData = {\r\n            filas: lstProductos\r\n        }\r\n        console.log(lstProductos);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_PROD, tempCatData, ui.SEL_CBO_PROD);\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraPoductos();\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraUsuarios();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioProm();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        manejaAbreModal();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}"],"file":"usuarioController.js"}