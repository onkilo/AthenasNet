{"version":3,"sources":["../es6/venta/ventaLstController.js"],"names":["VentaController","service","ui","lstVentas","ventaSeleccionada","AthenasNet","Mant","muestraVentas","filtros","listar","generarTabla","map","p","Id","Cliente","Nombre","Apellido","Colaborador","Trabajador","Fecha","formatFecha","FFecha","Importe","formatPrecio","Total","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","setFormMantenedor","Valor","parseFloat","toFixed","Producto","log","mostrarConfirmacion","manejaEnvioConf","getFormConfirmar","preventDefault","eliminar","ocultarConfirmacion","muestraToast","mensaje","titulo","cssClass","manejaEnvioFiltro","getFormFiltrar","getFiltros","muestraMensaje","localStorage","getItem","JSON","parse","texto","color","removeItem","iniciar"],"mappings":"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","sourcesContent":["﻿const VentaController = (service, ui) => {\r\n    let lstVentas = [];\r\n    let ventaSeleccionada = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraVentas = async (filtros = {}) => {\r\n        try {\r\n            lstVentas = await service.listar(filtros);\r\n            ui.generarTabla(lstVentas.map(p => {\r\n\r\n               \r\n                return {\r\n                    Id: p.Id,\r\n                    Cliente: p.Cliente.Nombre + ' ' + p.Cliente.Apellido,\r\n                    Colaborador: p.Trabajador.Nombre + ' ' + p.Trabajador.Apellido,\r\n                    Fecha: AthenasNet.formatFecha(p.FFecha),\r\n                    Importe: AthenasNet.formatPrecio(p.Total)\r\n                }\r\n\r\n            }));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                ventaSeleccionada = lstVentas.find(c => c.Id === parseInt(id));\r\n                ventaSeleccionada.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraVentas();\r\n                    Mant.setFormMantenedor(\r\n                        {\r\n                            ...ventaSeleccionada,\r\n                            Valor: parseFloat(ventaSeleccionada.Valor).toFixed(2),\r\n                            Producto: ventaSeleccionada.Producto.Id,\r\n                            Fecha: ventaSeleccionada.FFecha,                          \r\n                        },\r\n                        ['Activo', 'FFecha']);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(ventaSeleccionada.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'La venta fue eliminada satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraVentas();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraVentas(filtros);\r\n        })\r\n    }\r\n\r\n\r\n    const muestraMensaje = () => {\r\n        if (localStorage.getItem('mensaje')) {\r\n\r\n            const mensaje = JSON.parse(localStorage.getItem('mensaje'));\r\n\r\n            AthenasNet.muestraToast({ mensaje: mensaje.texto, titulo: mensaje.titulo, cssClass: mensaje.color })\r\n\r\n            localStorage.removeItem('mensaje');\r\n        }\r\n    }\r\n\r\n    const iniciar = async () => {\r\n\r\n        manejaEvtTabla();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        await muestraVentas();\r\n        muestraMensaje();\r\n\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"ventaLstController.js"}