{"version":3,"sources":["../es6/producto/productoController.js"],"names":["ProductoController","service","ui","categoriaService","usuarioService","lstProductos","prodSeleccionado","AthenasNet","Mant","rolesActuales","muestraProductos","filtros","listar","esVendedor","length","Nombre","data","filas","map","p","Id","Descripcion","PrecioCompra","formatPrecio","PrecioVenta","StockActual","StockMin","Categoria","edita","elimina","iniCodigo","generarTabla","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraCategorias","setFormMantenedor","parseFloat","toFixed","getImgDisplay","src","Imagen","log","mostrarConfirmacion","muestraDetalle","manejaEnvioProd","getFormMantenedor","preventDefault","producto","getProducto","startsWith","Base64Imagen","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","manejaImgInput","getImgInput","dir","getBase64Data","files","url","listarCategoria","lstCategorias","tempCatData","compilaTemplate","ID_TEMP_CAT","SEL_CBO_CAT","manejaAbreModal","getBtnNuevo","getRolesActuales","validacionUI","muestraVendedor","iniciar","configuraTamModal","evtMostrarModMant"],"mappings":"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","sourcesContent":["\r\nconst ProductoController = (service, ui, categoriaService, usuarioService) => {\r\n    let lstProductos = [];\r\n    let prodSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n    let rolesActuales = [];\r\n\r\n    const muestraProductos = async (filtros = {}) => {\r\n        try {\r\n            lstProductos = await service.listar(filtros);\r\n            const esVendedor = (rolesActuales.length === 1 && rolesActuales[0].Nombre === 'Vendedor')\r\n\r\n            const data = {\r\n                filas: lstProductos.map(p => ({\r\n                    Id: p.Id,\r\n                    Descripcion: p.Descripcion,\r\n                    PrecioCompra: AthenasNet.formatPrecio(p.PrecioCompra),\r\n                    PrecioVenta: AthenasNet.formatPrecio(p.PrecioVenta),\r\n                    StockActual: p.StockActual,\r\n                    StockMin: p.StockMin,\r\n                    Categoria: p.Categoria.Descripcion\r\n                })),\r\n                edita: !esVendedor,\r\n                elimina: !esVendedor,\r\n                iniCodigo: 'PD'\r\n            }\r\n            ui.generarTabla(data);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                prodSeleccionado = lstProductos.find(c => c.Id === parseInt(id));\r\n                prodSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraCategorias();\r\n                    Mant.setFormMantenedor({\r\n                        ...prodSeleccionado,\r\n                        PrecioCompra: parseFloat(prodSeleccionado.PrecioCompra).toFixed(2),\r\n                        PrecioVenta: parseFloat(prodSeleccionado.PrecioVenta).toFixed(2),\r\n                        Categoria: prodSeleccionado.Categoria.Id\r\n                    }, ['Descuento', 'Imagen', 'Activo', 'Base64Imagen']);\r\n                    ui.getImgDisplay().src = prodSeleccionado.Imagen;\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n                else if (accion === 'detalle') {\r\n                    await muestraCategorias();\r\n                    Mant.setFormMantenedor({\r\n                        ...prodSeleccionado,\r\n                        PrecioCompra: parseFloat(prodSeleccionado.PrecioCompra).toFixed(2),\r\n                        PrecioVenta: parseFloat(prodSeleccionado.PrecioVenta).toFixed(2),\r\n                        Categoria: prodSeleccionado.Categoria.Id\r\n                    }, ['Descuento', 'Imagen', 'Activo', 'Base64Imagen'], true);\r\n                    ui.getImgDisplay().src = prodSeleccionado.Imagen;\r\n                    ui.muestraDetalle(prodSeleccionado.Categoria);\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioProd = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            let producto = ui.getProducto();\r\n            if (ui.getImgDisplay().src.startsWith('data')) {\r\n                producto.Base64Imagen = ui.getImgDisplay().src;\r\n            }\r\n\r\n            delete producto.Imagen;\r\n            producto = {\r\n                ...producto,\r\n                Categoria: {\r\n                    Id: parseInt(producto.Categoria)\r\n                }\r\n            }\r\n            console.log(producto);\r\n            try {\r\n                if (producto.accion === 'registrar') {\r\n                    await service.crear(producto);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El producto se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (producto.accion === 'editar') {\r\n                    await service.actualizar(producto);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El producto se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraProductos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (producto.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (producto.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(prodSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El producto fue eliminado satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraProductos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraProductos(filtros);\r\n        })\r\n    }\r\n\r\n    const manejaImgInput = () => {\r\n        ui.getImgInput().addEventListener('input', async (evt) => {\r\n            console.dir(evt.target);\r\n            try {\r\n                const url = await ui.getBase64Data(evt.target.files[0]);\r\n                ui.getImgDisplay().src = url;\r\n\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    const muestraCategorias = async () => {\r\n        const lstCategorias = await categoriaService.listarCategoria({});\r\n        const tempCatData = {\r\n            filas: lstCategorias\r\n        }\r\n        console.log(lstCategorias);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_CAT, tempCatData, ui.SEL_CBO_CAT);\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraCategorias();\r\n        })\r\n    }\r\n\r\n    const getRolesActuales = async () => {\r\n        try {\r\n            rolesActuales = await usuarioService.rolesActuales();\r\n        }\r\n        catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const validacionUI = () => {\r\n        if (rolesActuales.length === 1 && rolesActuales[0].Nombre === 'Vendedor') {\r\n            ui.muestraVendedor();\r\n        }\r\n\r\n    }\r\n\r\n    const iniciar = async () => {\r\n        await getRolesActuales();\r\n        validacionUI();\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraProductos();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioProd();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        manejaImgInput();\r\n        manejaAbreModal();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"productoController.js"}