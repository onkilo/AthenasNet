{"version":3,"sources":["../es6/producto/productoController.js"],"names":["ProductoController","service","ui","categoriaService","esVendedor","lstProductos","prodSeleccionado","AthenasNet","Mant","muestraProductos","filtros","listar","data","filas","map","p","Id","Descripcion","PrecioCompra","formatPrecio","PrecioVenta","StockActual","StockMin","Categoria","edita","elimina","iniCodigo","generarTabla","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraCategorias","setFormMantenedor","parseFloat","toFixed","getImgDisplay","src","Imagen","log","mostrarConfirmacion","muestraDetalle","manejaEnvioProd","formMantenedor","getFormMantenedor","preventDefault","checkValidity","producto","getProducto","startsWith","Base64Imagen","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","esFormularioValido","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","manejaImgInput","getImgInput","dir","getBase64Data","files","url","listarCategoria","lstCategorias","tempCatData","compilaTemplate","ID_TEMP_CAT","SEL_CBO_CAT","manejaAbreModal","getBtnNuevo","validacionUI","muestraVendedor","iniciar","configuraTamModal","evtMostrarModMant"],"mappings":"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","sourcesContent":["/// <reference path=\"../../jquery-3.5.1.slim.js\" />\r\n\r\nconst ProductoController = (service, ui, categoriaService, { esVendedor }) => {\r\n    let lstProductos = [];\r\n    let prodSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraProductos = async (filtros = {}) => {\r\n        try {\r\n            lstProductos = await service.listar(filtros);\r\n\r\n            const data = {\r\n                filas: lstProductos.map(p => ({\r\n                    Id: p.Id,\r\n                    Descripcion: p.Descripcion,\r\n                    PrecioCompra: AthenasNet.formatPrecio(p.PrecioCompra),\r\n                    PrecioVenta: AthenasNet.formatPrecio(p.PrecioVenta),\r\n                    StockActual: p.StockActual,\r\n                    StockMin: p.StockMin,\r\n                    Categoria: p.Categoria.Descripcion\r\n                })),\r\n                edita: !esVendedor,\r\n                elimina: !esVendedor,\r\n                iniCodigo: 'PD'\r\n            }\r\n            ui.generarTabla(data);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                prodSeleccionado = lstProductos.find(c => c.Id === parseInt(id));\r\n                prodSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraCategorias();\r\n                    Mant.setFormMantenedor({\r\n                        ...prodSeleccionado,\r\n                        PrecioCompra: parseFloat(prodSeleccionado.PrecioCompra).toFixed(2),\r\n                        PrecioVenta: parseFloat(prodSeleccionado.PrecioVenta).toFixed(2),\r\n                        Categoria: prodSeleccionado.Categoria.Id\r\n                    }, ['Descuento', 'Imagen', 'Activo', 'Base64Imagen']);\r\n                    ui.getImgDisplay().src = prodSeleccionado.Imagen;\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n                else if (accion === 'detalle') {\r\n                    await muestraCategorias();\r\n                    Mant.setFormMantenedor({\r\n                        ...prodSeleccionado,\r\n                        PrecioCompra: parseFloat(prodSeleccionado.PrecioCompra).toFixed(2),\r\n                        PrecioVenta: parseFloat(prodSeleccionado.PrecioVenta).toFixed(2),\r\n                        Categoria: prodSeleccionado.Categoria.Id\r\n                    }, ['Descuento', 'Imagen', 'Activo', 'Base64Imagen'], true);\r\n                    ui.getImgDisplay().src = prodSeleccionado.Imagen;\r\n                    ui.muestraDetalle(prodSeleccionado.Categoria);\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioProd = () => {\r\n        const formMantenedor = Mant.getFormMantenedor();\r\n        formMantenedor.addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n            if (formMantenedor.checkValidity()) {\r\n                let producto = ui.getProducto();\r\n\r\n                if (producto.accion !== 'detalle') {\r\n                    if (ui.getImgDisplay().src.startsWith('data')) {\r\n                        producto.Base64Imagen = ui.getImgDisplay().src;\r\n                    }\r\n\r\n                    delete producto.Imagen;\r\n                    producto = {\r\n                        ...producto,\r\n                        Categoria: {\r\n                            Id: parseInt(producto.Categoria)\r\n                        }\r\n                    }\r\n                    console.log(producto);\r\n                    try {\r\n                        if (producto.accion === 'registrar') {\r\n                            await service.crear(producto);\r\n                            Mant.cerrarModMant();\r\n                            AthenasNet.muestraToast({ mensaje: 'El producto se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                        }\r\n                        else if (producto.accion === 'editar') {\r\n                            await service.actualizar(producto);\r\n                            Mant.cerrarModMant();\r\n                            AthenasNet.muestraToast({ mensaje: 'El producto se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                        }\r\n\r\n                        await muestraProductos();\r\n                    }\r\n                    catch (err) {\r\n                        console.error(err);\r\n                        const mensaje = (producto.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                        const titulo = (producto.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                        AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                Mant.esFormularioValido(false);\r\n            }\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(prodSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El producto fue eliminado satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraProductos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraProductos(filtros);\r\n        })\r\n    }\r\n\r\n    const manejaImgInput = () => {\r\n        ui.getImgInput().addEventListener('input', async (evt) => {\r\n            console.dir(evt.target);\r\n            try {\r\n                const url = await ui.getBase64Data(evt.target.files[0]);\r\n                ui.getImgDisplay().src = url;\r\n\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    const muestraCategorias = async () => {\r\n        const lstCategorias = await categoriaService.listarCategoria({});\r\n        const tempCatData = {\r\n            filas: lstCategorias\r\n        }\r\n        console.log(lstCategorias);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_CAT, tempCatData, ui.SEL_CBO_CAT);\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraCategorias();\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const validacionUI = () => {\r\n        if (esVendedor) {\r\n            ui.muestraVendedor();\r\n        }\r\n\r\n    }\r\n\r\n    const iniciar = async () => {\r\n        validacionUI();\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraProductos();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioProd();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        manejaImgInput();\r\n        manejaAbreModal();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"productoController.js"}