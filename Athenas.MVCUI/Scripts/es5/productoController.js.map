{"version":3,"sources":["../es6/producto/productoController.js"],"names":["ProductoController","service","ui","categoriaService","lstProductos","prodSeleccionado","AthenasNet","Mant","muestraProductos","filtros","listar","generarTabla","map","p","Id","Descripcion","PrecioCompra","formatPrecio","PrecioVenta","StockActual","StockMin","Categoria","console","error","manejaEvtTabla","getTblMantenedor","addEventListener","evt","target","dataset","id","accion","find","c","parseInt","muestraCategorias","setFormMantenedor","getImgDisplay","src","Imagen","log","mostrarConfirmacion","manejaEnvioProd","getFormMantenedor","envioProducto","getBtnAceptar","preventDefault","checkValidity","producto","getProducto","startsWith","Base64Imagen","crear","cerrarModMant","muestraToast","mensaje","titulo","actualizar","cssClass","stopPropagation","classList","add","manejaEnvioConf","getFormConfirmar","eliminar","ocultarConfirmacion","manejaEnvioFiltro","getFormFiltrar","getFiltros","manejaImgInput","getImgInput","dir","getBase64Data","files","url","listarCategoria","lstCategorias","tempCatData","filas","compilaTemplate","ID_TEMP_CAT","SEL_CBO_CAT","manejaAbreModal","getBtnNuevo","iniciar","configuraTamModal","evtMostrarModMant","evtResetModalProducto"],"mappings":";;;;;;;;;;;;AACA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAUC,EAAV,EAAcC,gBAAd,EAAmC;AAC1D,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AAF0D,oBAGzCC,UAHyC;AAAA,MAGlDC,IAHkD,eAGlDA,IAHkD;;AAK1D,MAAMC,gBAAgB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,OAAP,2DAAiB,EAAjB;AAAA;AAAA;AAAA,qBAEIR,OAAO,CAACS,MAAR,CAAeD,OAAf,CAFJ;;AAAA;AAEjBL,cAAAA,YAFiB;AAGjBF,cAAAA,EAAE,CAACS,YAAH,CAAgBP,YAAY,CAACQ,GAAb,CAAiB,UAAAC,CAAC;AAAA,uBAAK;AACnCC,kBAAAA,EAAE,EAAED,CAAC,CAACC,EAD6B;AAEnCC,kBAAAA,WAAW,EAAEF,CAAC,CAACE,WAFoB;AAGnCC,kBAAAA,YAAY,EAAEV,UAAU,CAACW,YAAX,CAAwBJ,CAAC,CAACG,YAA1B,CAHqB;AAInCE,kBAAAA,WAAW,EAAEZ,UAAU,CAACW,YAAX,CAAwBJ,CAAC,CAACK,WAA1B,CAJsB;AAKnCC,kBAAAA,WAAW,EAAEN,CAAC,CAACM,WALoB;AAMnCC,kBAAAA,QAAQ,EAAEP,CAAC,CAACO,QANuB;AAOnCC,kBAAAA,SAAS,EAAER,CAAC,CAACQ,SAAF,CAAYN;AAPY,iBAAL;AAAA,eAAlB,CAAhB;AAHiB;AAAA;;AAAA;AAAA;AAAA;AAcjBO,cAAAA,OAAO,CAACC,KAAR;;AAdiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBf,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAkBA,MAAMgB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBjB,IAAAA,IAAI,CAACkB,gBAAL,GAAwBC,gBAAxB,CAAyC,OAAzC;AAAA,0EAAkD,kBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE1CA,GAAG,CAACC,MAAJ,CAAWC,OAAX,CAAmBC,EAFuB;AAAA;AAAA;AAAA;;AAAA,sCAGnBH,GAAG,CAACC,MAAJ,CAAWC,OAHQ,EAGlCC,EAHkC,uBAGlCA,EAHkC,EAG9BC,MAH8B,uBAG9BA,MAH8B;AAK1C1B,gBAAAA,gBAAgB,GAAGD,YAAY,CAAC4B,IAAb,CAAkB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACnB,EAAF,KAASoB,QAAQ,CAACJ,EAAD,CAArB;AAAA,iBAAnB,CAAnB;AACAzB,gBAAAA,gBAAgB,CAAC0B,MAAjB,GAA0BA,MAA1B;;AAN0C,sBAQtCA,MAAM,KAAK,QAR2B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAShCI,iBAAiB,EATe;;AAAA;AAUtC5B,gBAAAA,IAAI,CAAC6B,iBAAL,iCAA4B/B,gBAA5B;AAA8CgB,kBAAAA,SAAS,EAAEhB,gBAAgB,CAACgB,SAAjB,CAA2BP;AAApF,oBAA0F,CAAC,QAAD,EAAW,QAAX,EAAqB,cAArB,CAA1F;AACAZ,gBAAAA,EAAE,CAACmC,aAAH,GAAmBC,GAAnB,GAAyBjC,gBAAgB,CAACkC,MAA1C;AAXsC;AAAA;;AAAA;AAarC,oBAAIR,MAAM,KAAK,UAAf,EAA2B;AAC5BT,kBAAAA,OAAO,CAACkB,GAAR,CAAY,UAAZ;AACAlC,kBAAAA,UAAU,CAACmC,mBAAX;AACH;;AAhByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlD;;AAAA;AAAA;AAAA;AAAA;AAqBH,GAtBD;;AAwBA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAE1BnC,IAAAA,IAAI,CAACoC,iBAAL,GAAyBjB,gBAAzB,CAA0C,QAA1C,EAAoDkB,aAApD;AACArC,IAAAA,IAAI,CAACsC,aAAL,GAAqBnB,gBAArB,CAAsC,OAAtC,EAA+CkB,aAA/C;AACH,GAJD;;AAMA,MAAMA,aAAa;AAAA,wEAAG,kBAAOjB,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBA,cAAAA,GAAG,CAACmB,cAAJ;;AADkB,oBAEdvC,IAAI,CAACoC,iBAAL,GAAyBI,aAAzB,OAA6C,IAF/B;AAAA;AAAA;AAAA;;AAGVC,cAAAA,QAHU,GAGC9C,EAAE,CAAC+C,WAAH,EAHD;;AAId,kBAAI/C,EAAE,CAACmC,aAAH,GAAmBC,GAAnB,CAAuBY,UAAvB,CAAkC,MAAlC,CAAJ,EAA+C;AAC3CF,gBAAAA,QAAQ,CAACG,YAAT,GAAwBjD,EAAE,CAACmC,aAAH,GAAmBC,GAA3C;AACH;;AAED,qBAAOU,QAAQ,CAACT,MAAhB;AACAS,cAAAA,QAAQ,mCACDA,QADC;AAEJ3B,gBAAAA,SAAS,EAAE;AACPP,kBAAAA,EAAE,EAAEoB,QAAQ,CAACc,QAAQ,CAAC3B,SAAV;AADL;AAFP,gBAAR;AAMAC,cAAAA,OAAO,CAACkB,GAAR,CAAYQ,QAAZ;AAfc;;AAAA,oBAiBNA,QAAQ,CAACjB,MAAT,KAAoB,WAjBd;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAkBA9B,OAAO,CAACmD,KAAR,CAAcJ,QAAd,CAlBA;;AAAA;AAmBNzC,cAAAA,IAAI,CAAC8C,aAAL;AACA/C,cAAAA,UAAU,CAACgD,YAAX,CAAwB;AAAEC,gBAAAA,OAAO,EAAE,4CAAX;AAAyDC,gBAAAA,MAAM,EAAE;AAAjE,eAAxB;AApBM;AAAA;;AAAA;AAAA,oBAsBDR,QAAQ,CAACjB,MAAT,KAAoB,QAtBnB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAuBA9B,OAAO,CAACwD,UAAR,CAAmBT,QAAnB,CAvBA;;AAAA;AAwBNzC,cAAAA,IAAI,CAAC8C,aAAL;AACA/C,cAAAA,UAAU,CAACgD,YAAX,CAAwB;AAAEC,gBAAAA,OAAO,EAAE,6CAAX;AAA0DC,gBAAAA,MAAM,EAAE;AAAlE,eAAxB;;AAzBM;AAAA;AAAA,qBA2BJhD,gBAAgB,EA3BZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8BVc,cAAAA,OAAO,CAACC,KAAR;AACMgC,cAAAA,OA/BI,GA+BOP,QAAQ,CAACjB,MAAT,KAAoB,WAArB,GAAoC,8BAApC,GAAqE,mCA/B3E;AAgCJyB,cAAAA,MAhCI,GAgCMR,QAAQ,CAACjB,MAAT,KAAoB,WAArB,GAAoC,kBAApC,GAAyD,uBAhC9D;AAiCVzB,cAAAA,UAAU,CAACgD,YAAX,CAAwB;AAAEI,gBAAAA,QAAQ,EAAE,WAAZ;AAAyBH,gBAAAA,OAAO,EAAEA,OAAlC;AAA2CC,gBAAAA,MAAM,EAAEA;AAAnD,eAAxB;;AAjCU;AAAA;AAAA;;AAAA;AAqCd7B,cAAAA,GAAG,CAACgC,eAAJ;;AArCc;AAuClBpD,cAAAA,IAAI,CAACoC,iBAAL,GAAyBiB,SAAzB,CAAmCC,GAAnC,CAAuC,eAAvC;;AAvCkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbjB,aAAa;AAAA;AAAA;AAAA,KAAnB;;AA0CA,MAAMkB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BxD,IAAAA,UAAU,CAACyD,gBAAX,GAA8BrC,gBAA9B,CAA+C,QAA/C;AAAA,0EAAyD,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACrDA,gBAAAA,GAAG,CAACmB,cAAJ,GADqD,CAChC;;AADgC;AAAA;AAAA,uBAG3C7C,OAAO,CAAC+D,QAAR,CAAiB9B,QAAQ,CAAC7B,gBAAgB,CAACS,EAAlB,CAAzB,CAH2C;;AAAA;AAIjDR,gBAAAA,UAAU,CAAC2D,mBAAX;AACA3D,gBAAAA,UAAU,CAACgD,YAAX,CAAwB;AAAEC,kBAAAA,OAAO,EAAE,8CAAX;AAA2DC,kBAAAA,MAAM,EAAE;AAAnE,iBAAxB;AALiD;AAAA,uBAM3ChD,gBAAgB,EAN2B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASjDc,gBAAAA,OAAO,CAACC,KAAR;AACAjB,gBAAAA,UAAU,CAACgD,YAAX,CAAwB;AAAEI,kBAAAA,QAAQ,EAAE,WAAZ;AAAyBH,kBAAAA,OAAO,EAAE,iCAAlC;AAAqEC,kBAAAA,MAAM,EAAE;AAA7E,iBAAxB;;AAViD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzD;;AAAA;AAAA;AAAA;AAAA;AAcH,GAfD;;AAiBA,MAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B3D,IAAAA,IAAI,CAAC4D,cAAL,GAAsBzC,gBAAtB,CAAuC,QAAvC;AAAA,0EAAiD,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CA,gBAAAA,GAAG,CAACmB,cAAJ,GAD6C,CACxB;;AACfrC,gBAAAA,OAFuC,GAE7BP,EAAE,CAACkE,UAAH,EAF6B;AAAA;AAAA,uBAGvC5D,gBAAgB,CAACC,OAAD,CAHuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjD;;AAAA;AAAA;AAAA;AAAA;AAKH,GAND;;AAQA,MAAM4D,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBnE,IAAAA,EAAE,CAACoE,WAAH,GAAiB5C,gBAAjB,CAAkC,OAAlC;AAAA,0EAA2C,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvCL,gBAAAA,OAAO,CAACiD,GAAR,CAAY5C,GAAG,CAACC,MAAhB;AADuC;AAAA;AAAA,uBAGjB1B,EAAE,CAACsE,aAAH,CAAiB7C,GAAG,CAACC,MAAJ,CAAW6C,KAAX,CAAiB,CAAjB,CAAjB,CAHiB;;AAAA;AAG7BC,gBAAAA,GAH6B;AAInCxE,gBAAAA,EAAE,CAACmC,aAAH,GAAmBC,GAAnB,GAAyBoC,GAAzB;AAJmC;AAAA;;AAAA;AAAA;AAAA;AAQnCpD,gBAAAA,OAAO,CAACC,KAAR;;AARmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3C;;AAAA;AAAA;AAAA;AAAA;AAYH,GAbD;;AAeA,MAAMY,iBAAiB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMhC,gBAAgB,CAACwE,eAAjB,CAAiC,EAAjC,CADN;;AAAA;AAChBC,cAAAA,aADgB;AAEhBC,cAAAA,WAFgB,GAEF;AAChBC,gBAAAA,KAAK,EAAEF;AADS,eAFE;AAKtBtD,cAAAA,OAAO,CAACkB,GAAR,CAAYoC,aAAZ;AACAtE,cAAAA,UAAU,CAACyE,eAAX,CAA2B7E,EAAE,CAAC8E,WAA9B,EAA2CH,WAA3C,EAAwD3E,EAAE,CAAC+E,WAA3D;;AANsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjB9C,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AASA,MAAM+C,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B3E,IAAAA,IAAI,CAAC4E,WAAL,GAAmBzD,gBAAnB,CAAoC,OAApC,uEAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnCS,iBAAiB,EADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7C;AAGH,GAJD;;AAMA,MAAMiD,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB7E,IAAAA,IAAI,CAAC8E,iBAAL,CAAuB,UAAvB;AACA7E,IAAAA,gBAAgB;AAChBD,IAAAA,IAAI,CAAC+E,iBAAL;AACA9D,IAAAA,cAAc;AACdkB,IAAAA,eAAe;AACfoB,IAAAA,eAAe;AACfI,IAAAA,iBAAiB;AACjBG,IAAAA,cAAc;AACda,IAAAA,eAAe;AACfhF,IAAAA,EAAE,CAACqF,qBAAH;AACH,GAXD;;AAcA,SAAO;AACHH,IAAAA,OAAO,EAAPA;AADG,GAAP;AAGH,CAvKD","sourcesContent":["\r\nconst ProductoController = (service, ui, categoriaService) => {\r\n    let lstProductos = [];\r\n    let prodSeleccionado = {};\r\n    const { Mant } = AthenasNet;\r\n\r\n    const muestraProductos = async (filtros = {}) => {\r\n        try {\r\n            lstProductos = await service.listar(filtros);\r\n            ui.generarTabla(lstProductos.map(p => ({\r\n                Id: p.Id,\r\n                Descripcion: p.Descripcion,\r\n                PrecioCompra: AthenasNet.formatPrecio(p.PrecioCompra),\r\n                PrecioVenta: AthenasNet.formatPrecio(p.PrecioVenta),\r\n                StockActual: p.StockActual,\r\n                StockMin: p.StockMin,\r\n                Categoria: p.Categoria.Descripcion\r\n            })));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        Mant.getTblMantenedor().addEventListener('click', async (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                prodSeleccionado = lstProductos.find(c => c.Id === parseInt(id));\r\n                prodSeleccionado.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    await muestraCategorias();\r\n                    Mant.setFormMantenedor({ ...prodSeleccionado, Categoria: prodSeleccionado.Categoria.Id }, ['Imagen', 'Activo', 'Base64Imagen']);\r\n                    ui.getImgDisplay().src = prodSeleccionado.Imagen;\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    AthenasNet.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioProd = () => {\r\n\r\n        Mant.getFormMantenedor().addEventListener('submit', envioProducto)\r\n        Mant.getBtnAceptar().addEventListener('click', envioProducto)\r\n    }\r\n\r\n    const envioProducto = async (evt) => {\r\n        evt.preventDefault();\r\n        if (Mant.getFormMantenedor().checkValidity() === true) {\r\n            let producto = ui.getProducto();\r\n            if (ui.getImgDisplay().src.startsWith('data')) {\r\n                producto.Base64Imagen = ui.getImgDisplay().src;\r\n            }\r\n\r\n            delete producto.Imagen;\r\n            producto = {\r\n                ...producto,\r\n                Categoria: {\r\n                    Id: parseInt(producto.Categoria)\r\n                }\r\n            }\r\n            console.log(producto);\r\n            try {\r\n                if (producto.accion === 'registrar') {\r\n                    await service.crear(producto);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El producto se registró satisfactoriamente', titulo: 'Registro exitoso' })\r\n                }\r\n                else if (producto.accion === 'editar') {\r\n                    await service.actualizar(producto);\r\n                    Mant.cerrarModMant();\r\n                    AthenasNet.muestraToast({ mensaje: 'El producto se actualizó satisfactoriamente', titulo: 'Actualización exitosa' })\r\n                }\r\n                await muestraProductos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                const mensaje = (producto.accion === 'registrar') ? 'Hubo un error en el registro' : 'Hubo un error en la actualización';\r\n                const titulo = (producto.accion === 'registrar') ? 'Registro erróneo' : 'Actualización errónea';\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: mensaje, titulo: titulo })\r\n            }\r\n        }\r\n        else {\r\n            evt.stopPropagation();\r\n        }\r\n        Mant.getFormMantenedor().classList.add('was-validated');\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        AthenasNet.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            try {\r\n                await service.eliminar(parseInt(prodSeleccionado.Id));\r\n                AthenasNet.ocultarConfirmacion();\r\n                AthenasNet.muestraToast({ mensaje: 'El producto fue eliminado satisfactoriamente', titulo: 'Eliminación exitosa' })\r\n                await muestraProductos();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n                AthenasNet.muestraToast({ cssClass: 'bg-danger', mensaje: 'Hubo un error en la eliminación', titulo: 'Eliminación errónea' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        Mant.getFormFiltrar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            const filtros = ui.getFiltros();\r\n            await muestraProductos(filtros);\r\n        })\r\n    }\r\n\r\n    const manejaImgInput = () => {\r\n        ui.getImgInput().addEventListener('input', async (evt) => {\r\n            console.dir(evt.target);\r\n            try {\r\n                const url = await ui.getBase64Data(evt.target.files[0]);\r\n                ui.getImgDisplay().src = url;\r\n\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    const muestraCategorias = async () => {\r\n        const lstCategorias = await categoriaService.listarCategoria({});\r\n        const tempCatData = {\r\n            filas: lstCategorias\r\n        }\r\n        console.log(lstCategorias);\r\n        AthenasNet.compilaTemplate(ui.ID_TEMP_CAT, tempCatData, ui.SEL_CBO_CAT);\r\n    }\r\n\r\n    const manejaAbreModal = () => {\r\n        Mant.getBtnNuevo().addEventListener('click', async () => {\r\n            await muestraCategorias();\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        Mant.configuraTamModal('modal-lg');\r\n        muestraProductos();\r\n        Mant.evtMostrarModMant();\r\n        manejaEvtTabla();\r\n        manejaEnvioProd();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n        manejaImgInput();\r\n        manejaAbreModal();\r\n        ui.evtResetModalProducto();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n"],"file":"productoController.js"}