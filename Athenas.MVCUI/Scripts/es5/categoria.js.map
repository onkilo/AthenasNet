{"version":3,"sources":["../es6/categoria.js"],"names":["CategoriaService","crearCategoria","categoria","AthenasNet","llamadaApi","type","data","JSON","stringify","url","respuesta","actualizarCategoria","listarCategoria","filtros","filtrosDefecto","Descripcion","Data","eliminarCategoria","id","Id","buscarCategoria","CategoriaUI","SELTBLCATEGORIA","SELBTNNUEVO","IDFORMCATEGORIA","IDFORMCONFIRMAR","SELTBLBODY","SELMODALCATE","SELMODALCONF","IDFORMFILTRAR","getTblCategoria","document","querySelector","getBtnNuevo","getFormCategoria","getElementById","getFormCateElements","elements","getFormEleValue","ele","value","setFormEleValue","getFormConfirmar","getFormFiltrar","getFiltros","ARRFILTROS","formFiltro","forEach","fil","generarTabla","lstCategorias","tBody","tableBody","cat","generarFila","innerHTML","muestraCategoria","accion","$","modal","template","evtMostrarModCategoria","evt","on","mostrarConfirmacion","ocultarConfirmacion","cerrarModCate","limpiarModalCat","getCategoria","parseInt","CategoriaController","service","ui","cateSeleccionada","muestraCategorias","console","error","configModalCate","e","manejaEvtTabla","addEventListener","target","dataset","find","c","log","manejaEnvioCat","preventDefault","manejaEnvioConf","manejaEnvioFiltro","iniciar","window","controller"],"mappings":";;;;;;;;;;;;AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAE3B,MAAMC,cAAc;AAAA,uEAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKC,UAAU,CAACC,UAAX,CAAsB;AAC1CC,gBAAAA,IAAI,EAAE,MADoC;AAE1CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAFoC;AAG1CO,gBAAAA,GAAG,EAAE;AAHqC,eAAtB,CADL;;AAAA;AACbC,cAAAA,SADa;AAAA,+CAOZA,SAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdT,cAAc;AAAA;AAAA;AAAA,KAApB;;AAUA,MAAMU,mBAAmB;AAAA,wEAAG,kBAAOT,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEAC,UAAU,CAACC,UAAX,CAAsB;AAC1CC,gBAAAA,IAAI,EAAE,MADoC;AAE1CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAFoC;AAG1CO,gBAAAA,GAAG,EAAE;AAHqC,eAAtB,CAFA;;AAAA;AAElBC,cAAAA,SAFkB;AAAA,gDAQjBA,SARiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBC,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAWA,MAAMC,eAAe;AAAA,wEAAG,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdC,cAAAA,cAFc;AAGhBC,gBAAAA,WAAW,EAAE;AAHG,iBAIbF,OAJa;AAAA;AAAA,qBAOIV,UAAU,CAACC,UAAX,CAAsB;AAC1CE,gBAAAA,IAAI,EAAEQ,cADoC;AAE1CL,gBAAAA,GAAG,EAAE;AAFqC,eAAtB,CAPJ;;AAAA;AAOdC,cAAAA,SAPc;AAAA,gDAYbA,SAAS,CAACM,IAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfJ,eAAe;AAAA;AAAA;AAAA,KAArB;;AAeA,MAAMK,iBAAiB;AAAA,wEAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEf,UAAU,CAACC,UAAX,CAAsB;AAC1CE,gBAAAA,IAAI,EAAE;AAAEa,kBAAAA,EAAE,EAAED;AAAN,iBADoC;AAE1CT,gBAAAA,GAAG,EAAE;AAFqC,eAAtB,CAFF;;AAAA;AAEhBC,cAAAA,SAFgB;AAAA,gDAMfA,SANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBO,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AASA,MAAMG,eAAe;AAAA,wEAAG,kBAAOF,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIf,UAAU,CAACC,UAAX,CAAsB;AAC1CE,gBAAAA,IAAI,EAAE;AAAEa,kBAAAA,EAAE,EAAED;AAAN,iBADoC;AAE1CT,gBAAAA,GAAG,EAAE;AAFqC,eAAtB,CADJ;;AAAA;AACdC,cAAAA,SADc;AAAA,gDAKbA,SALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfU,eAAe;AAAA;AAAA;AAAA,KAArB;;AASA,SAAO;AACHnB,IAAAA,cAAc,EAAdA,cADG;AAEHU,IAAAA,mBAAmB,EAAnBA,mBAFG;AAGHC,IAAAA,eAAe,EAAfA,eAHG;AAIHK,IAAAA,iBAAiB,EAAjBA,iBAJG;AAKHG,IAAAA,eAAe,EAAfA;AALG,GAAP;AAOH,CA/DD;;AAiEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtB,MAAMC,eAAe,GAAG,eAAxB;AACA,MAAMC,WAAW,GAAG,YAApB;AACA,MAAMC,eAAe,GAAG,gBAAxB;AACA,MAAMC,eAAe,GAAG,gBAAxB;AACA,MAAMC,UAAU,GAAG,qBAAnB;AACA,MAAMC,YAAY,GAAG,kBAArB;AACA,MAAMC,YAAY,GAAG,kBAArB;AACA,MAAMC,aAAa,GAAG,cAAtB;;AAGA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WAAMC,QAAQ,CAACC,aAAT,CAAuBV,eAAvB,CAAN;AAAA,GAAxB;;AAEA,MAAMW,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMF,QAAQ,CAACC,aAAT,CAAuBT,WAAvB,CAAN;AAAA,GAApB;;AAEA,MAAMW,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMH,QAAQ,CAACI,cAAT,CAAwBX,eAAxB,CAAN;AAAA,GAAzB;;AAEA,MAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WAAMF,gBAAgB,GAAGG,QAAzB;AAAA,GAA5B;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD;AAAA,WAASH,mBAAmB,GAAGG,GAAH,CAAnB,CAA2BC,KAApC;AAAA,GAAxB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACF,GAAD,EAAMC,KAAN,EAAgB;AAAEJ,IAAAA,mBAAmB,GAAGG,GAAH,CAAnB,CAA2BC,KAA3B,GAAmCA,KAAnC;AAA2C,GAArF;;AAEA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMX,QAAQ,CAACI,cAAT,CAAwBV,eAAxB,CAAN;AAAA,GAAzB;;AAEA,MAAMkB,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMZ,QAAQ,CAACI,cAAT,CAAwBN,aAAxB,CAAN;AAAA,GAAvB;;AAEA,MAAMe,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAMC,UAAU,GAAG,CAAC,aAAD,CAAnB;AAEA,QAAMC,UAAU,GAAGH,cAAc,EAAjC;AAEA,QAAI9B,OAAO,GAAG,EAAd;AAEAgC,IAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAC,GAAG,EAAI;AACtBnC,MAAAA,OAAO,mCACAA,OADA,2BAEFmC,GAFE,EAEIF,UAAU,CAACE,GAAD,CAAV,CAAgBR,KAFpB,EAAP;AAIH,KALD;AAQA,WAAO3B,OAAP;AACH,GAhBD;;AAkBA,MAAMoC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB;AACpC,QAAMC,KAAK,GAAGpB,QAAQ,CAACC,aAAT,CAAuBN,UAAvB,CAAd;AAEA,QAAI0B,SAAS,GAAG,EAAhB;AAEAF,IAAAA,aAAa,CAACH,OAAd,CAAsB,UAACM,GAAD,EAAS;AAC3BD,MAAAA,SAAS,IAAIE,WAAW,CAACD,GAAD,CAAxB;AACH,KAFD;AAIAF,IAAAA,KAAK,CAACI,SAAN,GAAkBH,SAAlB;AACH,GAVD;;AAYA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACtD,SAAD,EAAe;AACpCuC,IAAAA,eAAe,CAAC,aAAD,EAAgBvC,SAAS,CAACa,WAA1B,CAAf;AACA0B,IAAAA,eAAe,CAAC,QAAD,EAAWvC,SAAS,CAACiB,EAArB,CAAf;AACAsB,IAAAA,eAAe,CAAC,QAAD,EAAWvC,SAAS,CAACuD,MAArB,CAAf;AACAC,IAAAA,CAAC,CAAC/B,YAAD,CAAD,CAAgBgC,KAAhB,CAAsB,MAAtB;AACH,GALD;;AAOA,MAAML,WAAW,GAAG,SAAdA,WAAc,CAACpD,SAAD,EAAe;AAC/B,QAAI0D,QAAQ,qDAEE1D,SAAS,CAACiB,EAFZ,wCAGEjB,SAAS,CAACa,WAHZ,+IAK8Eb,SAAS,CAACiB,EALxF,oOAQ8EjB,SAAS,CAACiB,EARxF,yMAAZ;AAeA,WAAOyC,QAAP;AACH,GAjBD;;AAmBA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,GAAD,EAAS;AACpCJ,IAAAA,CAAC,CAAC/B,YAAD,CAAD,CAAgBoC,EAAhB,CAAmB,eAAnB,EAAoCD,GAApC;AACH,GAFD;;AAIA,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BN,IAAAA,CAAC,CAAC9B,YAAD,CAAD,CAAgB+B,KAAhB,CAAsB,MAAtB;AACH,GAFD;;AAIA,MAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BP,IAAAA,CAAC,CAAC9B,YAAD,CAAD,CAAgB+B,KAAhB,CAAsB,MAAtB;AACH,GAFD;;AAIA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBR,IAAAA,CAAC,CAAC/B,YAAD,CAAD,CAAgBgC,KAAhB,CAAsB,MAAtB;AACH,GAFD;;AAIA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B1B,IAAAA,eAAe,CAAC,iBAAD,EAAoB,EAApB,CAAf;AACAA,IAAAA,eAAe,CAAC,QAAD,EAAW,GAAX,CAAf;AACAA,IAAAA,eAAe,CAAC,QAAD,EAAW,WAAX,CAAf;AAEH,GALD;;AAOA,MAAM2B,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAMlE,SAAS,GAAG;AACda,MAAAA,WAAW,EAAEuB,eAAe,CAAC,iBAAD,CADd;AAEdnB,MAAAA,EAAE,EAAEkD,QAAQ,CAAC/B,eAAe,CAAC,QAAD,CAAhB,CAFE;AAGdmB,MAAAA,MAAM,EAAEnB,eAAe,CAAC,QAAD;AAHT,KAAlB;AAMA,WAAOpC,SAAP;AACH,GARD;;AAUA,SAAO;AACH4B,IAAAA,eAAe,EAAfA,eADG;AAEHG,IAAAA,WAAW,EAAXA,WAFG;AAGHC,IAAAA,gBAAgB,EAAhBA,gBAHG;AAIHQ,IAAAA,gBAAgB,EAAhBA,gBAJG;AAKHJ,IAAAA,eAAe,EAAfA,eALG;AAMHG,IAAAA,eAAe,EAAfA,eANG;AAOHQ,IAAAA,YAAY,EAAZA,YAPG;AAQHY,IAAAA,sBAAsB,EAAtBA,sBARG;AASHL,IAAAA,gBAAgB,EAAhBA,gBATG;AAUHQ,IAAAA,mBAAmB,EAAnBA,mBAVG;AAWHG,IAAAA,eAAe,EAAfA,eAXG;AAYHC,IAAAA,YAAY,EAAZA,YAZG;AAaHF,IAAAA,aAAa,EAAbA,aAbG;AAcHD,IAAAA,mBAAmB,EAAnBA,mBAdG;AAeHtB,IAAAA,cAAc,EAAdA,cAfG;AAgBHC,IAAAA,UAAU,EAAVA;AAhBG,GAAP;AAkBH,CAvID;;AAyIA,IAAM0B,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAUC,EAAV,EAAiB;AACzC,MAAItB,aAAa,GAAG,EAApB;AACA,MAAIuB,gBAAgB,GAAG,EAAvB;;AAGA,MAAMC,iBAAiB;AAAA,wEAAG,kBAAO7D,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEI0D,OAAO,CAAC3D,eAAR,CAAwBC,OAAO,GAAGA,OAAH,GAAa,EAA5C,CAFJ;;AAAA;AAElBqC,cAAAA,aAFkB;AAGlBsB,cAAAA,EAAE,CAACvB,YAAH,CAAgBC,aAAhB;AAHkB;AAAA;;AAAA;AAAA;AAAA;AAMlByB,cAAAA,OAAO,CAACC,KAAR;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBF,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAUA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BL,IAAAA,EAAE,CAACX,sBAAH,CAA0B,UAACiB,CAAD,EAAO;AAC7B,UAAIN,EAAE,CAAClC,eAAH,CAAmB,QAAnB,MAAiC,WAArC,EAAkD;AAC9CkC,QAAAA,EAAE,CAAC/B,eAAH,CAAmB,aAAnB,EAAkC,EAAlC;AACA+B,QAAAA,EAAE,CAAC/B,eAAH,CAAmB,QAAnB,EAA6B,CAA7B;AACH;AACJ,KALD;AAMH,GAPD;;AASA,MAAMsC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBP,IAAAA,EAAE,CAAC1C,eAAH,GAAqBkD,gBAArB,CAAsC,OAAtC,EAA+C,UAAClB,GAAD,EAAS;AAEpD,UAAIA,GAAG,CAACmB,MAAJ,CAAWC,OAAX,CAAmBhE,EAAvB,EAA2B;AAAA,kCACA4C,GAAG,CAACmB,MAAJ,CAAWC,OADX;AAAA,YACfhE,EADe,uBACfA,EADe;AAAA,YACXuC,MADW,uBACXA,MADW;AAGvBgB,QAAAA,gBAAgB,GAAGvB,aAAa,CAACiC,IAAd,CAAmB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACjE,EAAF,KAASkD,QAAQ,CAACnD,EAAD,CAArB;AAAA,SAApB,CAAnB;AACAuD,QAAAA,gBAAgB,CAAChB,MAAjB,GAA0BA,MAA1B;;AAEA,YAAIA,MAAM,KAAK,QAAf,EAAyB;AACrBe,UAAAA,EAAE,CAAChB,gBAAH,CAAoBiB,gBAApB;AACH,SAFD,MAGK,IAAIhB,MAAM,KAAK,UAAf,EAA2B;AAC5BkB,UAAAA,OAAO,CAACU,GAAR,CAAY,UAAZ;AACAb,UAAAA,EAAE,CAACR,mBAAH;AACH;AACJ;AAGJ,KAlBD;AAmBH,GApBD;;AAsBA,MAAMsB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzBd,IAAAA,EAAE,CAACtC,gBAAH,GAAsB8C,gBAAtB,CAAuC,QAAvC;AAAA,0EAAiD,kBAAOlB,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CA,gBAAAA,GAAG,CAACyB,cAAJ;AAEMrF,gBAAAA,SAHuC,GAG3BsE,EAAE,CAACJ,YAAH,EAH2B;AAAA;;AAAA,sBAKrClE,SAAS,CAACuD,MAAV,KAAqB,WALgB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAM/Bc,OAAO,CAACtE,cAAR,CAAuBC,SAAvB,CAN+B;;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAQhCA,SAAS,CAACuD,MAAV,KAAqB,QARW;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAS/Bc,OAAO,CAAC5D,mBAAR,CAA4BT,SAA5B,CAT+B;;AAAA;AAazCsE,gBAAAA,EAAE,CAACL,eAAH;AAbyC;AAAA;;AAAA;AAAA;AAAA;AAgBzCQ,gBAAAA,OAAO,CAACC,KAAR;;AAhByC;AAoB7CJ,gBAAAA,EAAE,CAACN,aAAH;AApB6C;AAAA,uBAqBvCQ,iBAAiB,EArBsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjD;;AAAA;AAAA;AAAA;AAAA;AAyBH,GA3BD;;AA6BA,MAAMc,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BhB,IAAAA,EAAE,CAAC9B,gBAAH,GAAsBsC,gBAAtB,CAAuC,QAAvC;AAAA,0EAAiD,kBAAOlB,GAAP;AAAA;AAAA;AAAA;AAAA;AAC7CA,gBAAAA,GAAG,CAACyB,cAAJ,GAD6C,CACxB;;AADwB;AAAA,uBAEvChB,OAAO,CAACtD,iBAAR,CAA0BoD,QAAQ,CAACI,gBAAgB,CAACtD,EAAlB,CAAlC,CAFuC;;AAAA;AAG7CqD,gBAAAA,EAAE,CAACP,mBAAH;AACAS,gBAAAA,iBAAiB;;AAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjD;;AAAA;AAAA;AAAA;AAAA;AAMH,GAPD;;AASA,MAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BjB,IAAAA,EAAE,CAAC7B,cAAH,GAAoBqC,gBAApB,CAAqC,QAArC;AAAA,0EAA8C,kBAAOlB,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CA,gBAAAA,GAAG,CAACyB,cAAJ;AACM1E,gBAAAA,OAFoC,GAE1B2D,EAAE,CAAC5B,UAAH,EAF0B,EAG1C;;AAH0C;AAAA,uBAIpC8B,iBAAiB,CAAC7D,OAAD,CAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA9C;;AAAA;AAAA;AAAA;AAAA;AAMH,GAPD;;AASA,MAAM6E,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBhB,IAAAA,iBAAiB,GADC,CAElB;;AACAK,IAAAA,cAAc;AACdO,IAAAA,cAAc;AACdE,IAAAA,eAAe;AACfC,IAAAA,iBAAiB;AACpB,GAPD;;AAUA,SAAO;AACHC,IAAAA,OAAO,EAAPA;AADG,GAAP;AAGH,CA1GD;;AA8GAC,MAAM,CAACX,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AAElC,MAAMT,OAAO,GAAGvE,gBAAgB,EAAhC;AAEA,MAAMwE,EAAE,GAAGnD,WAAW,EAAtB;AAEA,MAAMuE,UAAU,GAAGtB,mBAAmB,CAACC,OAAD,EAAUC,EAAV,CAAtC;AAEAoB,EAAAA,UAAU,CAACF,OAAX;AAEH,CAVD","sourcesContent":["\r\nconst CategoriaService = () => {\r\n\r\n    const crearCategoria = async (categoria) => {\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            type: 'POST',\r\n            data: JSON.stringify(categoria),\r\n            url: 'Categoria/Crear'\r\n        })\r\n\r\n        return respuesta;\r\n    }\r\n\r\n    const actualizarCategoria = async (categoria) => {\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            type: 'POST',\r\n            data: JSON.stringify(categoria),\r\n            url: 'Categoria/Actualizar'\r\n        })\r\n\r\n        return respuesta;\r\n    }\r\n\r\n    const listarCategoria = async (filtros) => {\r\n\r\n        const filtrosDefecto = {\r\n            Descripcion: '',\r\n            ...filtros\r\n        }\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: filtrosDefecto,\r\n            url: 'Categoria/Listar'\r\n        })\r\n\r\n        return respuesta.Data;\r\n    }\r\n\r\n    const eliminarCategoria = async (id) => {\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Categoria/Eliminar'\r\n        })\r\n        return respuesta\r\n    }\r\n\r\n    const buscarCategoria = async (id) => {\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Categoria/Obtener'\r\n        })\r\n        return respuesta;\r\n           \r\n    }\r\n\r\n    return {\r\n        crearCategoria,\r\n        actualizarCategoria,\r\n        listarCategoria,\r\n        eliminarCategoria,\r\n        buscarCategoria\r\n    }\r\n}\r\n\r\nconst CategoriaUI = () => {\r\n\r\n    const SELTBLCATEGORIA = '#tb-categoria';\r\n    const SELBTNNUEVO = '#btn-nuevo';\r\n    const IDFORMCATEGORIA = 'form-categoria';\r\n    const IDFORMCONFIRMAR = 'form-confirmar';\r\n    const SELTBLBODY = '#tb-categoria tbody';\r\n    const SELMODALCATE = '#modal-categoria';\r\n    const SELMODALCONF = '#modal-confirmar';\r\n    const IDFORMFILTRAR = 'form-filtrar';\r\n    \r\n\r\n    const getTblCategoria = () => document.querySelector(SELTBLCATEGORIA);\r\n\r\n    const getBtnNuevo = () => document.querySelector(SELBTNNUEVO);\r\n\r\n    const getFormCategoria = () => document.getElementById(IDFORMCATEGORIA);\r\n\r\n    const getFormCateElements = () => getFormCategoria().elements;\r\n\r\n    const getFormEleValue = (ele) => getFormCateElements()[ele].value;\r\n\r\n    const setFormEleValue = (ele, value) => { getFormCateElements()[ele].value = value; }\r\n\r\n    const getFormConfirmar = () => document.getElementById(IDFORMCONFIRMAR);\r\n\r\n    const getFormFiltrar = () => document.getElementById(IDFORMFILTRAR);\r\n\r\n    const getFiltros = () => {\r\n        const ARRFILTROS = ['Descripcion'];\r\n\r\n        const formFiltro = getFormFiltrar();\r\n\r\n        let filtros = {};\r\n\r\n        ARRFILTROS.forEach(fil => {\r\n            filtros = {\r\n                ...filtros,\r\n                [fil]: formFiltro[fil].value\r\n            }\r\n        });\r\n        \r\n\r\n        return filtros;\r\n    }\r\n\r\n    const generarTabla = (lstCategorias) => {\r\n        const tBody = document.querySelector(SELTBLBODY);\r\n\r\n        let tableBody = \"\";\r\n\r\n        lstCategorias.forEach((cat) => {\r\n            tableBody += generarFila(cat);\r\n        });\r\n\r\n        tBody.innerHTML = tableBody;\r\n    }\r\n\r\n    const muestraCategoria = (categoria) => {\r\n        setFormEleValue('descripcion', categoria.Descripcion);\r\n        setFormEleValue('hdn-id', categoria.Id);\r\n        setFormEleValue('accion', categoria.accion);\r\n        $(SELMODALCATE).modal('show');\r\n    }\r\n\r\n    const generarFila = (categoria) => {\r\n        let template = `\r\n            <tr>\r\n                <td>${categoria.Id}</td>\r\n                <td>${categoria.Descripcion}</td>\r\n                <td>\r\n                    <button type=\"button\" class=\"btn btn-success btn-sm btn-sin-click\" data-id=\"${categoria.Id}\" data-accion=\"editar\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-success btn-sm btn-sin-click\" data-id=\"${categoria.Id}\" data-accion=\"eliminar\">\r\n                        <i class=\"fas fa-trash-alt\" data-del-action=\"true\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        `;\r\n\r\n        return template;\r\n    }\r\n\r\n    const evtMostrarModCategoria = (evt) => {\r\n        $(SELMODALCATE).on('show.bs.modal', evt)\r\n    }\r\n\r\n    const mostrarConfirmacion = () => {\r\n        $(SELMODALCONF).modal('show');\r\n    }\r\n\r\n    const ocultarConfirmacion = () => {\r\n        $(SELMODALCONF).modal('hide');\r\n    }\r\n\r\n    const cerrarModCate = () => {\r\n        $(SELMODALCATE).modal('hide');\r\n    }\r\n\r\n    const limpiarModalCat = () => {\r\n        setFormEleValue('txt-descripcion', '');\r\n        setFormEleValue('hdn-id', '0');\r\n        setFormEleValue('accion', 'registrar');\r\n\r\n    }\r\n\r\n    const getCategoria = () => {\r\n        const categoria = {\r\n            Descripcion: getFormEleValue('txt-descripcion'),\r\n            Id: parseInt(getFormEleValue('hdn-id')),\r\n            accion: getFormEleValue('accion')\r\n        };\r\n\r\n        return categoria;\r\n    }\r\n\r\n    return {\r\n        getTblCategoria,\r\n        getBtnNuevo,\r\n        getFormCategoria,\r\n        getFormConfirmar,\r\n        getFormEleValue,\r\n        setFormEleValue,\r\n        generarTabla,\r\n        evtMostrarModCategoria,\r\n        muestraCategoria,\r\n        mostrarConfirmacion,\r\n        limpiarModalCat,\r\n        getCategoria,\r\n        cerrarModCate,\r\n        ocultarConfirmacion,\r\n        getFormFiltrar,\r\n        getFiltros\r\n    }\r\n}\r\n\r\nconst CategoriaController = (service, ui) => {\r\n    let lstCategorias = [];\r\n    let cateSeleccionada = {};\r\n\r\n\r\n    const muestraCategorias = async (filtros) => {\r\n        try {\r\n            lstCategorias = await service.listarCategoria(filtros ? filtros : {});\r\n            ui.generarTabla(lstCategorias);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const configModalCate = () => {\r\n        ui.evtMostrarModCategoria((e) => {\r\n            if (ui.getFormEleValue('accion') === 'registrar') {\r\n                ui.setFormEleValue('descripcion', '');\r\n                ui.setFormEleValue('hdn-id', 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    const manejaEvtTabla = () => {\r\n        ui.getTblCategoria().addEventListener('click', (evt) => {\r\n\r\n            if (evt.target.dataset.id) {\r\n                const { id, accion } = evt.target.dataset;\r\n\r\n                cateSeleccionada = lstCategorias.find(c => c.Id === parseInt(id));\r\n                cateSeleccionada.accion = accion;\r\n\r\n                if (accion === 'editar') {\r\n                    ui.muestraCategoria(cateSeleccionada);\r\n                }\r\n                else if (accion === 'eliminar') {\r\n                    console.log('eliminar')\r\n                    ui.mostrarConfirmacion();\r\n                }\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    const manejaEnvioCat = () => {\r\n\r\n        ui.getFormCategoria().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n\r\n            const categoria = ui.getCategoria();\r\n            try {\r\n                if (categoria.accion === 'registrar') {\r\n                    await service.crearCategoria(categoria);\r\n                }\r\n                else if (categoria.accion === 'editar') {\r\n                    await service.actualizarCategoria(categoria);\r\n\r\n                }\r\n\r\n                ui.limpiarModalCat();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n           \r\n\r\n            ui.cerrarModCate();\r\n            await muestraCategorias();\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const manejaEnvioConf = () => {\r\n        ui.getFormConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();//evitar la accion del evento\r\n            await service.eliminarCategoria(parseInt(cateSeleccionada.Id));\r\n            ui.ocultarConfirmacion();\r\n            muestraCategorias();\r\n        })\r\n    }\r\n\r\n    const manejaEnvioFiltro = () => {\r\n        ui.getFormFiltrar().addEventListener('submit',async (evt) => {\r\n            evt.preventDefault();\r\n            const filtros = ui.getFiltros();\r\n            //lstCategorias = await service.listarCategoria(filtros);\r\n            await muestraCategorias(filtros)\r\n        })\r\n    }\r\n\r\n    const iniciar = () => {\r\n        muestraCategorias();\r\n        //configModalCate();\r\n        manejaEvtTabla();\r\n        manejaEnvioCat();\r\n        manejaEnvioConf();\r\n        manejaEnvioFiltro();\r\n    }\r\n\r\n\r\n    return {\r\n        iniciar\r\n    }\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => {\r\n\r\n    const service = CategoriaService();\r\n\r\n    const ui = CategoriaUI();\r\n\r\n    const controller = CategoriaController(service, ui);\r\n\r\n    controller.iniciar();\r\n\r\n})"],"file":"categoria.js"}