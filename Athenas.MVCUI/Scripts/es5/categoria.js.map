{"version":3,"sources":["../es6/categoria.js"],"names":["categorias","CategoriaService","crearCategoria","categoria","AthenasNet","llamadaApi","type","data","JSON","stringify","url","respuesta","actualizarCategoria","listarCategoria","filtros","filtrosDefecto","Descripcion","Data","buscarCategoria","id","Id","eliminarCategoria","CategoriaUI","IDFORMCATEGORIA","IDFORMCONFIRMACION","TBLBODYSELECTOR","BTNNUEVOSELECTOR","TBLCATESELECTOR","MODALCATEGORIA","$","formCategoria","document","getElementById","formConfirmacion","formCategoriaElements","elements","getFormElement","ele","value","setFormElement","getTablaCate","querySelector","getBtnNuevo","generarFila","template","generarTabla","tBody","tableBody","lstCategorias","forEach","cat","innerHTML","getCategoria","accion","limpiaFormulario","escondeModal","modal","muestraModal","CategoriaController","service","ui","categoriaSeleccionada","lstCategoria","mostrarCategorias","console","error","manejaSubmitCate","addEventListener","evt","preventDefault","manejaSubmitConf","formConfirmar","manejaClickTabla","init","log","generarTempCategoria","window","tablaCategoria","btnNuevo","formElementos","on","e","target","dataset","cateSeleccionada","find","c","parseInt"],"mappings":"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","sourcesContent":["let categorias = [];\r\n\r\nconst CategoriaService = () => {\r\n\r\n    const crearCategoria = async (categoria) => {\r\n       const respuesta = await AthenasNet.llamadaApi({\r\n                type: 'POST',\r\n                data: JSON.stringify(categoria),\r\n                url: 'Categoria/Crear'\r\n        })\r\n\r\n        return respuesta;\r\n    }\r\n\r\n    const actualizarCategoria = async (categoria) => {\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            type: 'POST',\r\n            data: JSON.stringify(categoria),\r\n            url: 'Categoria/Actualizar'\r\n        })\r\n        return respuesta;\r\n          \r\n    }\r\n\r\n    const listarCategoria = async (filtros) => {\r\n        const filtrosDefecto = {\r\n            Descripcion: '',\r\n            ...filtros\r\n        }\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: filtrosDefecto,\r\n            url: 'Categoria/Listar'\r\n        })\r\n        return respuesta.Data;\r\n    }\r\n\r\n    const buscarCategoria = async (id) => {\r\n   \r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Categoria/Obtener'\r\n        })\r\n\r\n        return respuesta.Data;\r\n    }\r\n\r\n    const eliminarCategoria = async (id) => {\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Categoria/Eliminar'\r\n        })\r\n        return respuesta;\r\n    }\r\n\r\n    return {\r\n        crearCategoria,\r\n        actualizarCategoria,\r\n        listarCategoria,\r\n        buscarCategoria,\r\n        eliminarCategoria\r\n    }\r\n}\r\n\r\nconst CategoriaUI = () => {\r\n\r\n    const IDFORMCATEGORIA = 'form-categoria';\r\n    const IDFORMCONFIRMACION = 'form-confirmar';\r\n    const TBLBODYSELECTOR = '#tb-categoria tbody';\r\n    const BTNNUEVOSELECTOR = '#btn-nuevo';\r\n    const TBLCATESELECTOR = '#tb-categoria';\r\n    const MODALCATEGORIA = $('#modal-categoria');\r\n\r\n    const formCategoria = () => document.getElementById(IDFORMCATEGORIA);\r\n\r\n    const formConfirmacion = () => document.getElementById(IDFORMCONFIRMACION);\r\n\r\n    const formCategoriaElements = () => formCategoria().elements;\r\n\r\n    const getFormElement = (ele) => formCategoriaElements()[ele].value;\r\n\r\n    const setFormElement = (ele, value) => formCategoriaElements()[ele].value = value;\r\n\r\n    const getTablaCate = () => document.querySelector(TBLCATESELECTOR);\r\n\r\n    const getBtnNuevo = () => document.querySelector(BTNNUEVOSELECTOR);\r\n\r\n    const generarFila = (categoria) => {\r\n        let template = `\r\n            <tr>\r\n                <td>${categoria.Id}</td>\r\n                <td>${categoria.Descripcion}</td>\r\n                <td>\r\n                    <button type=\"button\" class=\"btn btn-success btn-sm btn-sin-click\" data-id=\"${categoria.Id}\" data-accion=\"editar\">\r\n                        <i class=\"fas fa-edit\"></i>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-success btn-sm btn-sin-click\" data-id=\"${categoria.Id}\" data-accion=\"eliminar\">\r\n                        <i class=\"fas fa-trash-alt\" data-del-action=\"true\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        `;\r\n\r\n        return template;\r\n    }\r\n\r\n    const generarTabla = (categorias) => {\r\n        const tBody = document.querySelector(TBLBODYSELECTOR);\r\n\r\n        let tableBody = \"\";\r\n\r\n        lstCategorias.forEach((cat) => {\r\n            tableBody += generarFila(cat);\r\n        });\r\n\r\n        tBody.innerHTML = tableBody;\r\n    }\r\n\r\n    const getCategoria = () => {\r\n        const categoria = {\r\n            Descripcion: getFormElement('txt-descripcion'),\r\n            Id: getFormElement('hdn-id'),\r\n            accion: getFormElement('accion'),\r\n        }\r\n\r\n        return categoria;\r\n    }\r\n\r\n    const limpiaFormulario = () => {\r\n        setFormElement('txt-descripcion', '');\r\n        setFormElement('hdn-id', 0);\r\n        setFormElement('accion', 'registrar');\r\n    }\r\n\r\n    const escondeModal = () => {\r\n        MODALCATEGORIA.modal('hide');\r\n    }\r\n\r\n    const muestraModal = (categoria) => {\r\n        if (categoria) {\r\n            setFormElement('txt-descripcion', categoria.Descripcion);\r\n            setFormElement('hdn-id', categoria.Id);\r\n            setFormElement('accion', 'editar');\r\n        }\r\n        else {\r\n            limpiaFormulario();\r\n        }\r\n\r\n        MODALCATEGORIA.modal('show');\r\n    }\r\n\r\n\r\n    return {\r\n        formCategoria,\r\n        generarTabla,\r\n        getCategoria,\r\n        limpiaFormulario,\r\n        formConfirmacion,\r\n        getTablaCate\r\n    }\r\n}\r\n\r\nconst CategoriaController = (service, ui) => {\r\n    let categoriaSeleccionada = {};\r\n    let lstCategoria = [];\r\n\r\n    const mostrarCategorias = async () => {\r\n        try {\r\n            lstCategorias = await service.listarCategoria({});\r\n\r\n            ui.generarTabla(lstCategoria);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    const manejaSubmitCate = () => {\r\n        ui.formCategoria.addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n            categoriaSeleccionada = ui.getCategoria();\r\n            try {\r\n                if (categoriaSeleccionada.accion === 'registrar') {\r\n                    categoriaSeleccionada.Id = 0;\r\n                    await service.crearCategoria(categoriaSeleccionada);\r\n                }\r\n                else if (categoriaSeleccionada.accion === 'editar') {\r\n                    await service.actualizarCategoria(categoriaSeleccionada);\r\n                    \r\n                }\r\n                ui.escondeModal();\r\n                ui.limpiaFormulario();\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    const manejaSubmitConf = () => {\r\n        ui.formConfirmar().addEventListener('submit', async (evt) => {\r\n            evt.preventDefault();\r\n            await service.eliminarCategoria(categoriaSeleccionada.Id);\r\n            \r\n            await mostrarCategorias();\r\n        }) \r\n    }\r\n\r\n    const manejaClickTabla = () => {\r\n        \r\n    }\r\n\r\n    const init = () => {\r\n        mostrarCategorias();\r\n        manejaSubmitCate();\r\n        manejaSubmitConf();\r\n    }\r\n\r\n    return { init };\r\n\r\n}\r\nconst crearCategoria = async (categoria) => {\r\n    try {\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            type: 'POST',\r\n            data: JSON.stringify(categoria),\r\n            url: 'Categoria/Crear'\r\n        })\r\n        //activar el toast\r\n        console.log(respuesta);\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nconst actualizarCategoria = async (categoria) => {\r\n    try {\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            type: 'POST',\r\n            data: JSON.stringify(categoria),\r\n            url: 'Categoria/Actualizar'\r\n        })\r\n        //activar el toast\r\n        console.log(respuesta);\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nconst generarTempCategoria = (categoria) => {\r\n    let template = `\r\n    <tr>\r\n        <td>${categoria.Id}</td>\r\n        <td>${categoria.Descripcion}</td>\r\n        <td>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm btn-sin-click\" data-id=\"${categoria.Id}\" data-accion=\"editar\">\r\n                <i class=\"fas fa-edit\"></i>\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm btn-sin-click\" data-id=\"${categoria.Id}\" data-accion=\"eliminar\">\r\n                <i class=\"fas fa-trash-alt\" data-del-action=\"true\"></i>\r\n            </button>\r\n        </td>\r\n    </tr>\r\n`;\r\n\r\n    return template;\r\n}\r\n\r\n\r\nconst generarTabla = (lstCategorias) => {\r\n    const tBody = document.querySelector('#tb-categoria tbody');\r\n\r\n    let tableBody = \"\";\r\n\r\n    lstCategorias.forEach((cat) => {\r\n        tableBody += generarTempCategoria(cat);\r\n    });\r\n\r\n    tBody.innerHTML = tableBody;\r\n}\r\n\r\nconst listarCategoria = async (filtros) => {\r\n    try {\r\n\r\n        const filtrosDefecto = {\r\n            Descripcion: '',\r\n            ...filtros\r\n        }\r\n\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: filtrosDefecto,\r\n            url: 'Categoria/Listar'\r\n        })\r\n        //activar el toast\r\n        console.log(respuesta);\r\n        categorias = respuesta.Data;\r\n        generarTabla(categorias);\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nconst buscarCategoria = async (id) => {\r\n    try {\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Categoria/Obtener'\r\n        })\r\n        //activar el toast\r\n        console.log(respuesta);\r\n        $('#modal-categoria').modal('hide');\r\n        //Limpiar campos\r\n    }\r\n    catch (err) {\r\n        //mensaje de error en el toast\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nconst eliminarCategoria = async (id) => {\r\n    try {\r\n        const respuesta = await AthenasNet.llamadaApi({\r\n            data: { Id: id },\r\n            url: 'Categoria/Eliminar'\r\n        })\r\n        //activar el toast\r\n        console.log(respuesta);\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => {\r\n\r\n    listarCategoria({});\r\n\r\n    const tablaCategoria = document.querySelector('#tb-categoria');\r\n    const btnNuevo = document.querySelector('#btn-nuevo');\r\n    const formCategoria = document.getElementById('form-categoria');\r\n    const formConfirmar = document.getElementById('form-confirmar');\r\n    const formElementos = formCategoria.elements;\r\n\r\n    btnNuevo.addEventListener('click', () => { formElementos['accion'].value = 'registrar'; });\r\n\r\n    $('#modal-categoria').on('show.bs.modal', (e) => {\r\n        if (formElementos['accion'].value === 'registrar') {\r\n            formElementos['descripcion'].value = '';\r\n            formElementos['hdn-id'].value = 0;\r\n        }\r\n    } )\r\n\r\n    tablaCategoria.addEventListener('click', (evt) => {\r\n\r\n        if (evt.target.dataset.id) {\r\n            const { id, accion } = evt.target.dataset;\r\n            if (accion === 'editar') {\r\n                console.log(formElementos)\r\n\r\n                const cateSeleccionada = categorias.find(c => c.Id === parseInt(id));\r\n\r\n                formElementos['descripcion'].value = cateSeleccionada.Descripcion;\r\n                formElementos['hdn-id'].value = cateSeleccionada.Id;\r\n                formElementos['accion'].value = 'editar';\r\n                $('#modal-categoria').modal('show');\r\n            }\r\n            else if (accion === 'eliminar') {\r\n                console.log('eliminar')\r\n                $('#modal-confirmar').modal('show');\r\n            }\r\n        }\r\n\r\n        \r\n    });\r\n\r\n    formCategoria.addEventListener('submit', async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const accion = formElementos['accion'].value;\r\n\r\n        const categoria = {\r\n            Descripcion: formElementos['txt-descripcion'].value,\r\n            Id: parseInt(formElementos['hdn-id'].value),\r\n        };\r\n\r\n        if (accion === 'registrar') {\r\n            await crearCategoria(categoria);\r\n        }\r\n        else if (accion === 'editar') {\r\n            await actualizarCategoria(categoria);\r\n            \r\n        }\r\n       \r\n        $('#modal-categoria').modal('hide');\r\n        await listarCategoria({});\r\n    })\r\n\r\n\r\n})"],"file":"categoria.js"}